DROP PROCEDURE "SYSTEM"."Z_MIGRATE_FROM_TRP_TO_TEMP";
CREATE PROCEDURE "SYSTEM"."Z_MIGRATE_FROM_TRP_TO_TEMP" AS 
BEGIN 

DECLARE SOURCE_SCHEMA_NAME NVARCHAR(256);
DECLARE TARGET_SCHEMA_NAME NVARCHAR(256);
DECLARE TAB_ARR NVARCHAR(256) ARRAY;
DECLARE ARR_INDEX INT;
DECLARE DDL_SQL NVARCHAR(1000);

SOURCE_SCHEMA_NAME := '"SAP_TM_TRP"';
TARGET_SCHEMA_NAME := '"SAP_TM_TRP_TMP"';


--------------------find tables 
TAB_LIST = SELECT CONCAT('"',CONCAT(TABLE_NAME,'"')) AS TABLE_NAME FROM (
select a.schema_name,a.table_name from m_cs_tables as a 
inner join tables as b on a.table_name = b.table_name
where a.schema_name in ('SAP_TM_TRP','SAP_TM_ROUTING') and a.record_count > 0
and b.is_temporary = 'FALSE'
and a.table_name in
(
SELECT CONCAT(CONCAT(PACKAGE_ID,'::'),OBJECT_NAME) AS TABLE_NAME FROM "_SYS_REPO"."ACTIVE_OBJECT" 
WHERE OBJECT_SUFFIX = 'hdbtable' AND PACKAGE_ID LIKE 'sap.tm.trp.%'
AND OBJECT_NAME NOT IN (
SELECT OBJECT_NAME FROM "_SYS_REPO"."ACTIVE_OBJECT" WHERE OBJECT_SUFFIX = 'csv' AND PACKAGE_ID LIKE 'sap.tm.trp.%'
)
)
)
ORDER BY TABLE_NAME;
 
---------------------------move tables to SYSTEM schema
TAB_ARR := ARRAY_AGG(:TAB_LIST.TABLE_NAME);
DDL_SQL := 'CREATE SCHEMA' || ' ' || :TARGET_SCHEMA_NAME;
EXECUTE IMMEDIATE :DDL_SQL;
FOR ARR_INDEX IN 1 .. CARDINALITY(:TAB_ARR) DO
	
	DDL_SQL := 'CREATE COLUMN TABLE' || ' ' || :TARGET_SCHEMA_NAME || '.' || :TAB_ARR[:ARR_INDEX] || ' ' || 'LIKE' || ' ' 
	|| :SOURCE_SCHEMA_NAME || '.' || :TAB_ARR[:ARR_INDEX] || ' ' || 'WITH DATA';
	EXECUTE IMMEDIATE :DDL_SQL;
	
END FOR;

 
END 
;


CALL "SYSTEM"."Z_MIGRATE_FROM_TRP_TO_TEMP"();