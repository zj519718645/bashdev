DROP PROCEDURE "SYSTEM"."GENERATE_TOR";
CREATE PROCEDURE "SYSTEM"."GENERATE_TOR" ()
AS
WAVE_ID NVARCHAR(8);
SECOND_DIFF INT;
DAYS_DIFF INT;
SUB_STR NVARCHAR(8) := '6CAE8B74';
RES_PREFIX NVARCHAR(8) := 'RAwBT8cq';
BEGIN

--generate wave id
SELECT TO_VARCHAR(CURRENT_TIMESTAMP,'YYMMDDHH24') INTO WAVE_ID FROM DUMMY;
--generate diff
SELECT TO_INT(( RAND() * 2 - 1 ) * 5184000) INTO SECOND_DIFF FROM DUMMY;	
SELECT TO_INT( :SECOND_DIFF / 24 / 3600 ) INTO DAYS_DIFF FROM DUMMY;




--generate lines of /SCMTMS/D_TORCC
D_TORCC = 
SELECT 
CCODE,
CCODE_TYPE,
REPLACE(DB_KEY,:SUB_STR,:WAVE_ID) AS DB_KEY,  
EEW_TRQ_CCODE,
MANDT,
REPLACE(PARENT_KEY,:SUB_STR,:WAVE_ID) AS PARENT_KEY,  
REF_CCODE_KEY,
REPLACE(ROOT_KEY,:SUB_STR,:WAVE_ID) AS ROOT_KEY
FROM "SYSTEM"."/SCMTMS/D_TORCC";


--generate lines of /SCMTMS/D_TOREXE
D_TOREXE =
SELECT
CASE WHEN ACTUAL_DATE = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(ACTUAL_DATE),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS ACTUAL_DATE,
ACTUAL_TZONE,
BASE_UOM_UNI,
BASE_UOM_VAL,
CHANGED_BY,
CASE WHEN CHANGED_ON = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(CHANGED_ON),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS CHANGED_ON,
CONT_CNT_UNI,
CONT_CNT_VAL,
CREATED_BY,
CASE WHEN CREATED_ON = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(CREATED_ON),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS CREATED_ON,
DATACS,
DATAID,
REPLACE(DB_KEY,:SUB_STR,:WAVE_ID) AS DB_KEY,
DG_ADR_PTS_UNI,
DG_ADR_PTS_VAL,
DISCREPANCY,
DISCR_INSIDE_TLR,
DISCR_NO_BLOCK,
DISCR_TYPE,
EEW_TOR_EXEC,
EM_WIT,
ESTIMATED_DATE,
EVENT_CODE,
EVENT_REASON,
EVENT_REASON_CODE,
EVENT_REVOKED,
EVENT_STATUS,
EXECINFO_SOURCE,
EXECUTION_ID,
EXEC_ROLE_CAT,
CASE WHEN EXP_END_DATE = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(EXP_END_DATE),5184000)),'YYYYMMDDHH24MISS') END AS EXP_END_DATE,
EXT_LOC_ID,
EXT_LOC_ID2,
EXT_LOC_TYPE,
EXT_LOC_UUID,
GEOALT,
GEOLAT,
GEOLON,
GRO_VOL_UNI,
GRO_VOL_VAL,
GRO_WEI_UNI,
GRO_WEI_VAL,
MANDT,
NET_DURATION,
NET_WEI_UNI,
NET_WEI_VAL,
ORIG_EXEC_KEY,
REPLACE(PARENT_KEY,:SUB_STR,:WAVE_ID) AS PARENT_KEY,
PKGUN_WEI_UNI,
PKGUN_WEI_VAL,
QTY_DISCREPANCY,
QUA_PCS2_UNI,
QUA_PCS2_VAL,
QUA_PCS_UNI,
QUA_PCS_VAL,
REF_EVENT_CODE,
SNDCOD,
SNDID,
CASE WHEN TORITMUUID = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(TORITMUUID,:SUB_STR,:WAVE_ID) END AS TORITMUUID,
CASE WHEN TORSTOPUUID = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(TORSTOPUUID,:SUB_STR,:WAVE_ID) END AS TORSTOPUUID,
TRANS_ACTIVITY
FROM "SYSTEM"."/SCMTMS/D_TOREXE";



--generate lines of /SCMTMS/D_TORITE
D_TORITE =
SELECT 
AIR_EXCH_RATE,
AIR_EXCH_UOM,
AIR_HUMIDITY,
AMT_GDSVC_CUR,
AMT_GDSVC_VAL,
AMT_GDSV_CUR,
AMT_GDSV_VAL,
AMT_HVAL_CAR_IND,
AMT_INSV_CUR,
AMT_INSV_VAL,
CASE WHEN ASSGN_END = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(ASSGN_END),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS ASSGN_END,
CASE WHEN ASSGN_START = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(ASSGN_START),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS ASSGN_START,
BASE_BTDITEM_ID,
BASE_BTDITEM_TCO,
BASE_BTD_ID,
BASE_BTD_LOGSYS,
BASE_BTD_TCO,
BASE_BTD_VERSION,
BASE_UOM_UNI,
BASE_UOM_UNICAP,
BASE_UOM_VAL,
BASE_UOM_VALCAP,
CAPREF_KEY,
CARGO_RECEIPT,
CARRIER_PROD_ID,
CNF_CONT_CNT_UNI,
CNF_CONT_CNT_VAL,
CNF_GRO_VOL_UNI,
CNF_GRO_VOL_VAL,
CNF_GRO_WEI_UNI,
CNF_GRO_WEI_VAL,
CNF_QUA_PCS2_UNI,
CNF_QUA_PCS2_VAL,
CNF_QUA_PCS_UNI,
CNF_QUA_PCS_VAL,
CONF_STATUS,
CONSIGNEE_ID,
CONSIGNEE_KEY,
CONS_CONT,
CONT_CNT_UNI,
CONT_CNT_UNICAP,
CONT_CNT_VAL,
CONT_CNT_VALCAP,
COUNTRY,
COUNTRY_VEHIC_ID,
CP_ADDRESS_ID,
CT_SEQ,
CT_TYPE,
CUSTOMS_HANDLG,
REPLACE(DB_KEY,:SUB_STR,:WAVE_ID) AS DB_KEY,
CASE WHEN DEL_EAR_ACCTRQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_EAR_ACCTRQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_EAR_ACCTRQ,
CASE WHEN DEL_EAR_REQTRQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_EAR_REQTRQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_EAR_REQTRQ,
CASE WHEN DEL_LAT_ACCTRQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_LAT_ACCTRQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_LAT_ACCTRQ,
CASE WHEN DEL_LAT_REQTRQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_LAT_REQTRQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_LAT_REQTRQ,
DENSITY_FACTOR,
DES_LOC_IATACODETRQ,
DES_LOC_IDTRQ,
DES_LOC_KEYTRQ,
DES_LOC_UNLOCODETRQ,
CASE WHEN DES_STOP_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(DES_STOP_KEY,:SUB_STR,:WAVE_ID) END AS DES_STOP_KEY,
CASE WHEN DES_STOP_KEY_A = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(DES_STOP_KEY_A,:SUB_STR,:WAVE_ID) END AS DES_STOP_KEY_A,
DGO_CHECK_ERROR,
DGO_DOC_BASED,
DGO_INDICATOR,
DG_ADR_NO_EXEMPTION,
DG_ADR_PTS_UNI,
DG_ADR_PTS_UNICAP,
DG_ADR_PTS_VAL,
DG_ADR_PTS_VALCAP,
DISCREPANCY,
DISCR_NO_BLOCK,
EEW_TOR_ITM_TR,
EMPTY_RETURN_REQ,
ERP_COMP_CODE,
ERP_COMP_ORG_ID,
ERP_DLV_ID,
ERP_DLV_ITEM_ID,
ERP_PLANT_ID,
FAG_ITEM_KEY,
FAG_KEY,
FAG_SERVICE_KEY,
FLIGHT_CODE,
FLIGHT_NUMBER,
FREE_STORAGE_TIME,
FU_QTY_FIXED,
CASE WHEN FU_ROOT_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(FU_ROOT_KEY,:SUB_STR,:WAVE_ID) END AS FU_ROOT_KEY,
GRO_VOL_UNI,
GRO_VOL_UNICAP,
GRO_VOL_VAL,
GRO_VOL_VALCAP,
GRO_WEI_UNI,
GRO_WEI_UNICAP,
GRO_WEI_VAL,
GRO_WEI_VALCAP,
GT_ATB,
GT_ATB_EDATE,
GT_ATB_TYPE,
GT_BOND_CARGO,
GT_CUSTDECL_ID,
GT_CUST_ACT_IB,
GT_IMPORT_LOC,
GT_MRN,
GT_MRN_EDATE,
GT_STATUS,
HANDLING_CARGO,
HANDLING_EXEC,
HBL_NUMBER,
HBL_NUMBER_STATUS,
HEIGHT,
HEIGHTCAM,
IMO_ID,
INCL_PIECE_COUNT,
INC_CLASS_CODE,
INC_LOC_ID,
INC_LOC_KEY,
INC_TRANSF_LOC_N,
ITEM_CAPA_DEF,
ITEM_CAT,
ITEM_DESCR,
ITEM_ID,
CASE WHEN ITEM_PARENT_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(ITEM_PARENT_KEY,:SUB_STR,:WAVE_ID) END AS ITEM_PARENT_KEY,
ITEM_SORT_ID,
ITEM_TYPE,
CASE WHEN LEADING_ITEM_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(LEADING_ITEM_KEY,:SUB_STR,:WAVE_ID) END AS LEADING_ITEM_KEY,
LENGTH,
LENGTHCAM,
LENGTH_VRES,
LOAD_SEQ,
LOCAL_CCODE,
LOCAL_ITEM,
LOCAL_NOG,
MAIN_CARGO_ITEM,
MANDT,
MEASUOM,
MEASUOMCAM,
MEASUOM_VRES,
MIXED_PALLET_IND,
MOT,
MOT_CAT,
MTR,
MULTI_ITEM,
MULTI_RESOURCE,
NET_WEI_UNI,
NET_WEI_UNICAP,
NET_WEI_VAL,
NET_WEI_VALCAP,
NON_STACKABLE,
OP_UUID001,
ORGANIZED_BY_ORDPARTY,
ORIENTATION,
ORIG_BTDITEM_ID,
ORIG_BTDITEM_TCO,
ORIG_BTD_ID,
ORIG_BTD_TCO,
ORIG_REF_BO,
CASE WHEN ORIG_REF_ITEM = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(ORIG_REF_ITEM,:SUB_STR,:WAVE_ID) END AS ORIG_REF_ITEM,
CASE WHEN ORIG_REF_ROOT = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(ORIG_REF_ROOT,:SUB_STR,:WAVE_ID) END AS ORIG_REF_ROOT,
OVERDIM_CARGO,
PACKAGE_ID,
PACKAGE_TCO,
PACKCODE,
REPLACE(PARENT_KEY,:SUB_STR,:WAVE_ID) AS PARENT_KEY,
PAYL_VOL_UNI_VRES,
PAYL_VOL_VAL_VRES,
PAYL_WEI_UNI_VRES,
PAYL_WEI_VAL_VRES,
CASE WHEN PIC_EAR_ACCTRQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_EAR_ACCTRQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_EAR_ACCTRQ,
CASE WHEN PIC_EAR_REQTRQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_EAR_REQTRQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_EAR_REQTRQ,
CASE WHEN PIC_LAT_ACCTRQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_LAT_ACCTRQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_LAT_ACCTRQ,
CASE WHEN PIC_LAT_REQTRQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_LAT_REQTRQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_LAT_REQTRQ,
PIV_WEI_UNI,
PIV_WEI_VAL,
PKGUN_WEI_UNI,
PKGUN_WEI_UNICAP,
PKGUN_WEI_VAL,
PKGUN_WEI_VALCAP,
PLATENUMBER,
POS_LEVEL,
POS_ROW,
POS_SPLIT_DECK,
POS_STACK,
POS_X,
POS_Y,
POS_Z,
PRD_DGPROFL,
PRD_FRGHT_GRP,
PRD_KEY,
PRD_TRANSP_GRP,
PRODUCT_ID,
PROVISION_REQ,
QTY_DISCREPANCY,
QUA_PCS2_UNI,
QUA_PCS2_UNICAP,
QUA_PCS2_VAL,
QUA_PCS2_VALCAP,
QUA_PCS_UNI,
QUA_PCS_UNICAP,
QUA_PCS_VAL,
QUA_PCS_VALCAP,
REF_BO,
CASE WHEN REF_ITEM_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(REF_ITEM_KEY,:SUB_STR,:WAVE_ID) END AS REF_ITEM_KEY,
CASE WHEN REF_ROOT_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(REF_ROOT_KEY,:SUB_STR,:WAVE_ID) END AS REF_ROOT_KEY,
CASE WHEN REF_TRQ_ITEM_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(REF_TRQ_ITEM_KEY,:SUB_STR,:WAVE_ID) END AS REF_TRQ_ITEM_KEY,
CASE WHEN REF_TRQ_ROOT_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(REF_TRQ_ROOT_KEY,:SUB_STR,:WAVE_ID) END AS REF_TRQ_ROOT_KEY,
RESOURCE_CONDITION,
RES_CLASS,
RES_OWNER_ORG,
RES_TIME_CHECK_REL,
SALES_QTY_UNI,
SALES_QTY_VAL,
SCHED_DEP,
SCHED_KEY,
SHIPPER_ID,
SHIPPER_KEY,
SHIPPER_OWN,
SLAC_VAL,
SPLIT_INDICATOR,
SPLIT_ORIG_REF_ITEM,
SP_ADDRESS_ID,
SRC_LOC_IATACODETRQ,
SRC_LOC_IDTRQ,
SRC_LOC_KEYTRQ,
SRC_LOC_UNLOCODETRQ,
CASE WHEN SRC_STOP_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(SRC_STOP_KEY,:SUB_STR,:WAVE_ID) END AS SRC_STOP_KEY,
CASE WHEN SRC_STOP_KEY_A = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(SRC_STOP_KEY_A,:SUB_STR,:WAVE_ID) END AS SRC_STOP_KEY_A,
STOP_SUCC_ASSGN,
TARE_WEI_UNI_VRES,
TARE_WEI_VAL_VRES,
TEMP_CTRL_MAX,
TEMP_CTRL_MIN,
TEMP_UOM,
TRACKING_NO,
TRACK_EXEC_REL,
TRANSSRVLVL_CODE,
TRANSSRVREQ_CODE,
CASE WHEN TRQ_ID = '$1' THEN '$1' WHEN TRQ_ID = '' THEN '' ELSE CONCAT(LTRIM(TRQ_ID,'0'),:WAVE_ID) END AS TRQ_ID,
TRQ_ITEM_ID,
TURES_CAT,
CASE WHEN TURES_ID = '' THEN '' ELSE CONCAT(TURES_ID,:WAVE_ID) END AS TURES_ID,
TURES_TCO,
ULD_RATE_CLASS,
ULD_RATE_TYPE,
CASE WHEN UNASSGN_END = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(UNASSGN_END),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS UNASSGN_END,
CASE WHEN UNASSGN_START = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(UNASSGN_START),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS UNASSGN_START,
UNLOAD_POINTTRQ,
UPD_PROP_INDICATOR,
CASE WHEN VEHICLERES_ID = '' THEN '' ELSE CONCAT(VEHICLERES_ID,:WAVE_ID) END AS VEHICLERES_ID,
VEHSEQ,
CASE WHEN VEH_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(VEH_KEY,:SUB_STR,:WAVE_ID) END AS VEH_KEY,
VENT_SETT_CODE,
VESSEL_ID,
VOYAGE_ID,
WIDTH,
WIDTHCAM,
WM_LOGSYS,
WM_WH_NUMBER
FROM "SYSTEM"."/SCMTMS/D_TORITE";



--generate lines of /SCMTMS/D_TORROT
D_TORROT =
SELECT 
ACS_AUTH_CHECK,
ACS_CHANGED_BY,
ACS_CHANGED_ON,
ACS_CHECK_ENABLE,
ACS_COPY_LOCDATA,
ALLOWED_ITM_ASSIGNM,
AOTYPE,
ARCHIVING,
ARCHIVING_TIME,
ARRIVAL_DATE,
AUTO_CONF,
AUTO_PLAN,
AUTO_TCC,
BALOG_EXTNO,
BASE_BTDITEM_ID,
BASE_BTDITEM_TCO,
BASE_BTD_ID,
BASE_BTD_TCO,
BASE_BTD_VERSION,
BASE_UOM_UNI,
BASE_UOM_UNICAP,
BASE_UOM_VAL,
BASE_UOM_VALCAP,
BLK_EXEC,
BLK_PLAN,
BLOCK_REASON,
BL_NODE_KEY,
BL_NUMBER,
BL_NUMBER_FIN,
BL_NUMBER_STATUS,
BOK_CONT_ITM_SRC,
BOK_MULTI_STOP,
BOOKING_EXEC,
BOOKING_TRMO,
BRC_EXEC,
BRC_PLAN,
BW_RELEVANCE,
CAPA_CHECK_ERROR,
CARR_CONF_NEC,
CASS_CODE,
CB_MEANS_IDENT,
CB_MOT,
CB_MTR,
CB_MTR_COUNTRY,
CHANGED_BY,
CASE WHEN CHANGED_ON = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(CHANGED_ON),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS CHANGED_ON,
CMPLC_CHK_ENABLE,
CM_ID,
COLOAD_IND,
COMMPTYID,
COMMPTY_KEY,
COMPLIANCE,
CONFIRMATION,
CONSIGNEEID,
CONSIGNEE_KEY,
CONSOL_TYPE,
CONS_ALLOWED,
CONS_IND,
CONTRACT_BASIS,
CONT_CNT_UNI,
CONT_CNT_UNICAP,
CONT_CNT_VAL,
CONT_CNT_VALCAP,
CREATED_BY,
CASE WHEN CREATED_ON = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(CREATED_ON),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS CREATED_ON,
CREATION_TYPE,
CROSS_DOC_CHECK_STATUS,
CS_EXECUTED,
CURR_WGHT_AXLE1,
CURR_WGHT_AXLE2,
CURR_WGHT_AXLE3,
CURR_WGHT_CONNECTOR,
CURR_WGHT_KING_PIN,
CURR_WGHT_SPLIT_DECK,
CUSTOMS,
DATETIME_BLK_EXE,
DATETIME_BLK_INV,
DATETIME_BLK_PLA,
DATETIME_CHCMPLC,
DATETIME_CHCUS,
DATETIME_CHEXC,
CASE WHEN DATETIME_CHLC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DATETIME_CHLC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DATETIME_CHLC,
CASE WHEN DATETIME_CHSCC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DATETIME_CHSCC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DATETIME_CHSCC,
CASE WHEN DATETIME_CHSCS = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DATETIME_CHSCS),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DATETIME_CHSCS,
REPLACE(DB_KEY,:SUB_STR,:WAVE_ID) AS DB_KEY,
DELETE_IND,
DELIVERY,
DENSITY_FACTOR,
DFLT_PCS_UNI,
DFLT_TEXT_TYPE,
DFLT_VOL_UOM,
DFLT_WEI_UOM,
DGO_CHECK_ERROR,
DGO_INDICATOR,
DG_ADR_NO_EXEMPTION,
DG_ADR_PTS_UNI,
DG_ADR_PTS_UNICAP,
DG_ADR_PTS_VAL,
DG_ADR_PTS_VALCAP,
DISPLAY_UNCONF_ITMS,
DLV_BLOCKED,
DLV_CONF_RCVD_ON,
DLV_CREATED_ON,
DLV_PRIO,
DLV_SPLT_STATUS,
DOC_CHECK_STATUS,
EEW_TOR_ROOT,
EIKTO,
ENABLE_CHARGE_CALC,
ENABLE_COST_DISTRIBUTION,
ENABLE_INT_CHARGE_CALC,
ENABLE_INT_COST_DISTR,
ENABLE_INT_SETTLEMENT,
ENABLE_SETTLEMENT,
ERP_SHPM_BTDID,
ERP_SHPM_LOGSYS,
ERP_SHPM_TYPE,
ERP_SHP_REL,
EST_MA_DATE,
EVENT_SCHEDULED,
EXCL_FU_FROM_PLN,
EXCL_NSC_SEC,
EXCL_SCO_SEC,
EXCL_SPX_SEC,
EXECUTION,
EXEC_GRP_ID,
EXEC_ORG_ID,
FAG_ITEM_KEY,
FAG_KEY,
FINAL_EXEC_EVENT,
FIRST_SHP_TRANSM,
FIXATION,
FOLLOWUP_TRQ_EXP,
FREIGHT_TERM,
FUBR_KEY,
FU_FIX,
GEN_SECURITY_STATUS,
GOODS_AMNT_AGGR_MOD,
GRO_VOL_UNI,
GRO_VOL_UNICAP,
GRO_VOL_VAL,
GRO_VOL_VALCAP,
GRO_WEI_UNI,
GRO_WEI_UNICAP,
GRO_WEI_VAL,
GRO_WEI_VALCAP,
IATA_AGENT_CODE,
INC_CHECK_ERROR,
INS_ENABLE,
INVDISP_RESOLUTION,
INV_BLOCK,
INV_BLOCK_REASON,
LABELTXT,
LAST_SHPM_TRANSM,
LAST_UPD_BY_ERP,
LC_COMP_SET_MAN,
LIFECYCLE,
LOAD_PLAN_STATUS,
LOGSYS,
LOG_REFERENCE,
MANDT,
MANIFESTED,
MAX_AVA_CAPA_VOL,
MAX_AVA_CAPA_WEI,
MAX_GRO_VOL_UNI,
MAX_GRO_VOL_VAL,
MAX_GRO_WEI_UNI,
MAX_GRO_WEI_VAL,
MAX_UTIL,
MAX_UTIL_LENGTH,
MAX_UTIL_MASS,
MAX_UTIL_VOLUME,
MBL_ISSUING_DATE,
MOVEMENT_CAT,
MOVEMENT_TYPE,
MSG_DLV_COUNTER,
MTR,
MULTI_EXE_PTY,
MULTI_INV_PTY,
NET_WEI_UNI,
NET_WEI_UNICAP,
NET_WEI_VAL,
NET_WEI_VALCAP,
NOT_SEC_FU_ASSIGNED,
OIAC_PROFILE_KEY,
ORGANIZATION_INTERACTION,
OUTPUT_OPTIONS,
OUTPUT_OPT_CHG_DATETIME,
PARTNER_MBL_ID,
PARTNER_MBL_ID_STATUS,
PARTNER_MBL_RCVD,
PARTNER_REF_ID,
PARTNER_SCHEMA,
PKGUN_WEI_UNI,
PKGUN_WEI_UNICAP,
PKGUN_WEI_VAL,
PKGUN_WEI_VALCAP,
PLAN_PROF_ID,
PLAN_PROF_KEY,
PLAN_STATUS_ROOT,
PLN_SCT_REL,
PPF_PROFILE,
PPF_PROFILE_ADD,
PPF_PROFILE_AUTO,
PREDEC_BLK_EXEC,
PREDEC_BLK_PLAN,
PROC_RESULT_CODE,
PROP_EXEC_INFO,
PURCH_GRP_ID,
PURCH_ORG_ID,
PYMT_IND,
QUA_PCS2_UNI,
QUA_PCS2_UNICAP,
QUA_PCS2_VAL,
QUA_PCS2_VALCAP,
QUA_PCS_UNI,
QUA_PCS_UNICAP,
QUA_PCS_VAL,
QUA_PCS_VALCAP,
REF_EXPORTDOC_KEY,
REGULATED_AGENT_CODE,
RESP_PERSON,
SCI_CODE,
SECURITY_MANIFEST,
SECURITY_STATUS,
SEC_CHANGED_BY,
SEC_CHANGED_ON,
SEC_MAN_SET_BY_SRVC,
SEC_STATUS,
SELF_DELIVERY,
SENDER_PARTY_ID,
SERVICE_LVL_PD,
SERVICE_LVL_PL,
SHIPPERID,
SHIPPER_KEY,
SHIPPING_TYPE,
SHPCON_SET_BY,
SHPM_TRANSM,
SHPM_UPD_REL,
SHP_CONS_RULE,
SRC_LOC_CSS,
SRC_LOC_EXPIRY_DATE,
SRC_LOC_REGREFNO,
STAGE_DET_STRAT,
STAGE_PROFILE,
STOP_SEQ_TYPE,
SUBCONTRACTING,
TCC_EVENT_PROFILE,
TEND_EXECUTED,
TEXT_SCHEMA,
TOR_CAT,
CASE WHEN TOR_ID = '' THEN '' ELSE CONCAT(LTRIM(TOR_ID,'0'),:WAVE_ID) END AS TOR_ID,
TOR_TYPE,
TRACK_EXEC_REL,
TRAFFIC_DIRECT,
TRANSSRVLVL_CODE,
TRMODCAT,
TRMODCOD,
TRQ_CAT,
TRQ_UNIQUE,
TSP,
TSPEXECID,
TSPEXEC_AIRLC,
TSPEXEC_KEY,
TSPEXEC_SCAC,
TSPEXEC_SET_BY,
TSPID,
TSPISSAGNT_ID,
TSPISSAGNT_KEY,
TSP_AIRLC,
TSP_AIRLCAWB,
TSP_SCAC,
TSP_SET_BY_SRVC,
TU_CAT,
UNCONTROLLED,
UPDATE_FROM_PRED,
USER_ID_BLK_EXEC,
USER_ID_BLK_INV,
USER_ID_BLK_PLAN,
USER_ID_CHCUS,
USER_ID_CHEXC,
USER_ID_CHLC,
USER_ID_CHSCC,
USER_ID_CHSCS,
WGHT_LOADING_UOM
FROM "SYSTEM"."/SCMTMS/D_TORROT";


--generate lines of /SCMTMS/D_TORSTP
D_TORSTP =
SELECT 
CASE WHEN ACC_END = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(ACC_END),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS ACC_END,
CASE WHEN ACC_START = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(ACC_START),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS ACC_START,
ADR_LOC_UUID,
CASE WHEN ASSGN_END = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(ASSGN_END),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS ASSGN_END,
ASSGN_HRES,
ASSGN_HRES_CONS,
CASE WHEN ASSGN_ITEM_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(ASSGN_ITEM_KEY,:SUB_STR,:WAVE_ID) END AS ASSGN_ITEM_KEY,
ASSGN_NET_DUR,
ASSGN_SEQ,
CASE WHEN ASSGN_START = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(ASSGN_START),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS ASSGN_START,
CASE WHEN ASSGN_STOP_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(ASSGN_STOP_KEY,:SUB_STR,:WAVE_ID) END AS ASSGN_STOP_KEY,
ASSG_CAT,
AUTO_PLAN,
CARR_CONF_END,
CARR_CONF_START,
CUTOFF_CARGO,
CUTOFF_CUST_DOC,
CUTOFF_DG_DOC,
CUTOFF_DOC,
CUTOFF_DOC_SET_BY_SRVC,
DATES_SETBY,
REPLACE(DB_KEY,:SUB_STR,:WAVE_ID) AS DB_KEY,
EEW_TOR_STOP,
ENTRY_PORT,
EXIT_PORT,
HANDLING_EXEC,
LOG_LOCIATA,
LOG_LOCID,
LOG_LOCUN,
LOG_LOC_UUID,
MANDT,
REPLACE(PARENT_KEY,:SUB_STR,:WAVE_ID) AS PARENT_KEY,
CASE WHEN PLAN_TRANS_TIME = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PLAN_TRANS_TIME),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PLAN_TRANS_TIME,
CASE WHEN REQ_END = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(REQ_END),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS REQ_END,
CASE WHEN REQ_START = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(REQ_START),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS REQ_START,
ROUTE_REF_DATA_STATUS,
ROUTE_ROOT_KEY,
ROUTE_STOP_KEY,
SCHED_DEP_KEY,
SCHED_REF_DATA_STATUS,
SCHED_REF_INFO,
CASE WHEN SCHED_STOP_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(SCHED_STOP_KEY,:SUB_STR,:WAVE_ID) END AS SCHED_STOP_KEY,
CASE WHEN SEL_TIME = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(SEL_TIME),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS SEL_TIME,
STOP_CAT,
STOP_CURRENT,
STOP_FIX,
STOP_ID,
STOP_ORIGIN,
STOP_ROLE,
STOP_SEQ_POS,
CASE WHEN TRQ_ACC_END = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(TRQ_ACC_END),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS TRQ_ACC_END,
CASE WHEN TRQ_ACC_START = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(TRQ_ACC_START),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS TRQ_ACC_START,
TRQ_BASED_STOP,
CASE WHEN TRQ_REQ_END = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(TRQ_REQ_END),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS TRQ_REQ_END,
CASE WHEN TRQ_REQ_START = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(TRQ_REQ_START),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS TRQ_REQ_START
FROM "SYSTEM"."/SCMTMS/D_TORSTP";


--generate lines of /SCMTMS/D_TORSTS
D_TORSTS = 
SELECT 
AGREEMENT_PARTY,
AIRCRAFT_CODE,
BILL_TO_PARTY_ID,
BILL_TO_PARTY_KEY,
BLK_EXEC,
BLK_PLAN,
BRC_EXEC,
BRC_PLAN,
DATETIME_BLK_EXE,
DATETIME_BLK_PLA,
REPLACE(DB_KEY,:SUB_STR,:WAVE_ID) AS DB_KEY,
DG_ADR_NO_EXEMPTION,
DG_ADR_REL,
DISTANCE_KM,
DURATION_NET,
EEW_TOR_STOPSUCC,
EXEC_GRP_ID,
EXEC_ORG_ID,
EXTERNAL_FA_ID,
FAG_ID,
FAG_ITEM_KEY,
FAG_ITEM_NO,
FAG_KEY,
FLAG_COUNTRY,
FLIGHT_CODE,
FLIGHT_NUMBER,
GT_CUST_ACT_INB,
IMO_ID,
MANDT,
MAX_UTIL,
MOT,
MOT_CAT,
MOT_CAT_PROP,
MOT_PROP,
MTR_PROP,
MTR_TCO,
OI_REJ_REASON_CODE,
OI_REQ_BY,
ORDER_REL_TYPE,
ORG_INTERACTION,
OTHER_AG_PARTY_RC,
REPLACE(PARENT_KEY,:SUB_STR,:WAVE_ID) AS PARENT_KEY,
PLAN_STATUS,
PREDEC_BLK_EXEC,
PREDEC_BLK_PLAN,
RESP_PERSON,
CASE WHEN ROOT_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(ROOT_KEY,:SUB_STR,:WAVE_ID) END AS ROOT_KEY,
SCHED_REF,
STAGE_CAT,
STAGE_TYPE,
STATISTICAL,
STG_PYMT_IND,
STOP_SUCC_CAT,
SUCCESSOR_ID,
CASE WHEN SUCC_STOP_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(SUCC_STOP_KEY,:SUB_STR,:WAVE_ID) END AS SUCC_STOP_KEY,
TSP_AIRLC,
TSP_AIRLCAWB,
TSP_ID,
TSP_KEY,
TSP_PYMT_ID,
TSP_PYMT_KEY,
TSP_PYMT_SCAC,
TSP_SCAC,
USER_ID_BLK_EXEC,
USER_ID_BLK_PLAN,
UTIL_DIMLESS,
UTIL_LENGTH,
UTIL_MASS,
UTIL_VOLUME,
VESSEL_ID,
VOYAGE_ID
FROM "SYSTEM"."/SCMTMS/D_TORSTS";



--generate lines of /SCMTMS/D_TRQITM
D_TRQITM = 
SELECT 
AIR_EXCH_RATE,
AIR_EXCH_UOM,
AIR_HUMIDITY,
AMT_GDSVC_CUR,
AMT_GDSVC_VAL,
AMT_GDSV_CUR,
AMT_GDSV_VAL,
AMT_HVAL_CAR_IND,
AMT_INSV_CUR,
AMT_INSV_VAL,
BASE_BTDITEM_ID,
BASE_BTDITEM_TCO,
BASE_BTD_DLVPROC,
BASE_BTD_ID,
BASE_BTD_LOGSYS,
BASE_BTD_TCO,
BASE_BTD_VERSION,
BASE_UOM_UNI,
BASE_UOM_VAL,
BLK_EXEC,
BLK_PLAN,
BOM_INDICATOR,
BUYORIG_BTD_DATE,
BUYORIG_BTD_ID,
CNF_CONT_CNT_UNI,
CNF_CONT_CNT_VAL,
CNF_GRO_VOL_UNI,
CNF_GRO_VOL_VAL,
CNF_GRO_WEI_UNI,
CNF_GRO_WEI_VAL,
CNF_QTY_UNI,
CNF_QTY_VAL,
CNF_QUA_PCS2_UNI,
CNF_QUA_PCS2_VAL,
CNF_QUA_PCS_UNI,
CNF_QUA_PCS_VAL,
CNV_RATE_BAS_UNI,
CNV_RATE_BAS_VAL,
CONSIGNEE_ID,
CONSIGNEE_KEY,
CONS_CONT,
CONT_CNT_UNI,
CONT_CNT_VAL,
CONV_RATE_UNI,
CONV_RATE_VAL,
COUNTRY,
CP_ADDRESS_ID,
CUST_COMM_CLASS,
REPLACE(DB_KEY,:SUB_STR,:WAVE_ID) AS DB_KEY,
CASE WHEN DEL_EAR_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_EAR_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_EAR_ACC,
DEL_EAR_CNF,
CASE WHEN DEL_EAR_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_EAR_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_EAR_REQ,
CASE WHEN DEL_LAT_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_LAT_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_LAT_ACC,
DEL_LAT_CNF,
CASE WHEN DEL_LAT_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_LAT_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_LAT_REQ,
CASE WHEN DEL_SEL_TIME = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_SEL_TIME),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_SEL_TIME,
DES_LOC_IATACODE,
DES_LOC_ID,
DES_LOC_KEY,
DES_LOC_UNLOCODE,
CASE WHEN DES_STAGE_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(DES_STAGE_KEY,:SUB_STR,:WAVE_ID) END AS DES_STAGE_KEY,
DGO_CHECK_ERROR,
DGO_DOC_BASED,
DGO_INDICATOR,
DG_ADR_NO_EXEMPTION,
DG_ADR_PTS_UNI,
DG_ADR_PTS_VAL,
DLV_ADD_SPLITCRT,
DLV_BLOCKED,
DLV_BLOCK_REASON,
DLV_COMPLETED,
DLV_RELEVANCE,
DLV_RETURN,
DT_ITEM_GRP_ID,
DT_ORD_COMB_IND,
DT_PRIORITY_C,
EEW_TRQ_ITEM,
EMPTY_RETURN_REQ,
ERP_COMP_CODE,
ERP_COMP_ORG_ID,
ERP_PLANT_ID,
EXPORT_BT_TYPE,
FAG_ITEM_KEY,
FAG_KEY,
FAG_SERVICE_KEY,
GM_RELEVANCE,
GOODS_ISSUE_DATE,
GRO_VOL_UNI,
GRO_VOL_VAL,
GRO_WEI_UNI,
GRO_WEI_VAL,
GT_ATB,
GT_ATB_EDATE,
GT_ATB_TYPE,
GT_BOND_CARGO,
GT_CUST_ACT_IB,
GT_IMPORT_LOC,
HEIGHT,
INB_CUSPR_AREA,
INB_CUSPR_STOCK,
INC_CLASS_CODE,
INC_LOC_EAR_ACC,
INC_LOC_EAR_REQ,
INC_LOC_ID,
INC_LOC_KEY,
INC_LOC_LAT_ACC,
INC_LOC_LAT_REQ,
INC_TRANSF_LOC_N,
ITEM_CAT,
ITEM_COMPLETED,
ITEM_DESCR,
ITEM_HIER_TCO,
ITEM_ID,
CASE WHEN ITEM_PARENT_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(ITEM_PARENT_KEY,:SUB_STR,:WAVE_ID) END AS ITEM_PARENT_KEY,
ITEM_TYPE,
CASE WHEN LEADING_ITEM_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(LEADING_ITEM_KEY,:SUB_STR,:WAVE_ID) END AS LEADING_ITEM_KEY,
LENGTH,
MAIN_CARGO_ITEM,
MANDT,
MAT_AVAIL_DATE,
MEASUOM,
MOT,
MOT_CAT,
NET_WEI_UNI,
NET_WEI_VAL,
NON_STACKABLE,
OPEN_QTY_UNI,
OPEN_QTY_VAL,
ORD_ITM_CANCELED,
ORD_ITM_REJECTED,
ORD_REJ_REASON,
ORGANIZED_BY_ORDPARTY,
ORIGCOUNTRY_CODE,
ORIGREGION_CODE,
ORIG_BTDITEM_ID,
ORIG_BTDITEM_TCO,
ORIG_BTD_DLVPROC,
ORIG_BTD_ID,
ORIG_BTD_TCO,
CASE WHEN ORIG_DLV_DATE = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(ORIG_DLV_DATE),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS ORIG_DLV_DATE,
ORIG_INCLOC_DATE,
CASE WHEN ORIG_PU_DATE = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(ORIG_PU_DATE),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS ORIG_PU_DATE,
OUTB_CUSPR_AREA,
OUTB_CUSPR_STOCK,
OVERDIM_CARGO,
PACKAGE_ID,
PACKAGE_TCO,
PACKCODE,
REPLACE(PARENT_KEY,:SUB_STR,:WAVE_ID) AS PARENT_KEY,
PAR_DLV_MIN_UNI,
PAR_DLV_MIN_VAL,
PAR_DLV_RDF_UNI,
PAR_DLV_RDF_VAL,
PD_CTRL_CODE,
PD_MAX_NUMBER,
CASE WHEN PIC_EAR_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_EAR_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_EAR_ACC,
PIC_EAR_CNF,
CASE WHEN PIC_EAR_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_EAR_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_EAR_REQ,
CASE WHEN PIC_LAT_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_LAT_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_LAT_ACC,
PIC_LAT_CNF,
CASE WHEN PIC_LAT_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_LAT_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_LAT_REQ,
PIC_PAC_ACTDUR,
CASE WHEN PIC_SEL_TIME = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_SEL_TIME),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_SEL_TIME,
PKGUN_WEI_UNI,
PKGUN_WEI_VAL,
PLATENUMBER,
PRD_DGPROFL,
PRD_FRGHT_GRP,
PRD_KEY,
PRD_TRANSP_GRP,
PRODUCT_ID,
PROVISION_REQ,
QTY_DTM_FIXED,
QT_OVER_PERCENT,
QT_OVER_PERC_IND,
QT_UNDER_PERCENT,
QUA_COMP_BSD_UNI,
QUA_COMP_BSD_VAL,
QUA_DLV_UNI,
QUA_DLV_VAL,
QUA_PCS2_UNI,
QUA_PCS2_VAL,
QUA_PCS_UNI,
QUA_PCS_VAL,
REQ_QTY_UNI,
REQ_QTY_VAL,
RES_CLASS,
SHIPPER_ID,
SHIPPER_KEY,
SHIPPER_OWN,
SLAC_VAL,
SP_ADDRESS_ID,
SRC_LOC_CSS,
SRC_LOC_IATACODE,
SRC_LOC_ID,
SRC_LOC_KEY,
SRC_LOC_REGREFNO,
SRC_LOC_UNLOCODE,
CASE WHEN SRC_STAGE_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(SRC_STAGE_KEY,:SUB_STR,:WAVE_ID) END AS SRC_STAGE_KEY,
TEMP_CTRL_MAX,
TEMP_CTRL_MIN,
TEMP_UOM,
TIMESTREAM_ID,
TRANP_PL_DATE,
TRANSP_RELEVANCE,
TRANSSRVLVL_CODE,
TRANSSRVREQ_CODE,
TRQ_OTR_ITEM_KEY,
TURES_CAT,
CASE WHEN TURES_ID = '' THEN '' ELSE CONCAT(TURES_ID,:WAVE_ID) END AS TURES_ID,
TURES_TCO,
UNLOAD_POINT,
CASE WHEN VEHICLERES_ID = '' THEN '' ELSE CONCAT(VEHICLERES_ID,:WAVE_ID) END AS VEHICLERES_ID,
VEH_KEY,
VENT_SETT_CODE,
WIDTH
FROM "SYSTEM"."/SCMTMS/D_TRQITM";





--generate lines of /SCMTMS/D_TRQROT
D_TRQROT =
SELECT 
ACS_CHECK_ENABLE,
ACS_COPY_LOCDATA,
ADD_FAG_ITEM_KEY,
ADD_FAG_KEY,
ADD_SERVICE_PRODUCT_ID,
AGGR_ORG_INTERACTION,
AGREEMENT_PARTY,
AIR_SECURITY,
AMT_GDSVC_CUR,
AMT_GDSVC_VAL,
AMT_GDSV_CUR,
AMT_GDSV_VAL,
AMT_HVAL_CAR_IND,
AMT_INSV_CUR,
AMT_INSV_VAL,
APPROVAL,
APPROVAL_ACTIVE,
ARCHIVING,
ARCHIVING_TIME,
BASE_BTD_DATE,
BASE_BTD_ID,
BASE_BTD_PROCTCO,
BASE_BTD_TCO,
BASE_BTD_VERSION,
BASE_UOM_UNI,
BASE_UOM_VAL,
BLKG_EDI,
BLK_CFIR,
BLK_CONF,
BLK_EXEC,
BLK_PLAN,
BLK_QUOT,
BRC_CFIR,
BRC_CONF,
BRC_EXEC,
BRC_PLAN,
BRC_QUOT,
BUYORIG_BTD_DATE,
BUYORIG_BTD_ID,
CHANGED_BY,
CASE WHEN CHANGED_ON = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(CHANGED_ON),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS CHANGED_ON,
CMPLC_CHK_ENABLE,
CNCL_RSN_CODE,
CNF_CONT_CNT_UNI,
CNF_CONT_CNT_VAL,
CNF_GRO_VOL_UNI,
CNF_GRO_VOL_VAL,
CNF_GRO_WEI_UNI,
CNF_GRO_WEI_VAL,
CNF_QUA_PCS2_UNI,
CNF_QUA_PCS2_VAL,
CNF_QUA_PCS_UNI,
CNF_QUA_PCS_VAL,
COMPLETENESS,
COMPLIANCE,
CONFIRMATION,
CONSIGNEE_ID,
CONSIGNEE_KEY,
CONSOL_TYPE,
CONSUMPTION,
CONT_CNT_UNI,
CONT_CNT_VAL,
CP_ADDRESS_ID,
CREATED_BY,
CASE WHEN CREATED_ON = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(CREATED_ON),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS CREATED_ON,
CREDITLIMIT,
CRTRADE_FWO_KEY,
CUSTOMS_HANDLG,
DATETIME_CHCMPLC,
DATETIME_CHCNF,
CASE WHEN DATETIME_CHLC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DATETIME_CHLC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DATETIME_CHLC,
REPLACE(DB_KEY,:SUB_STR,:WAVE_ID) AS DB_KEY,
DEF_ROUTE_KEY,
DELIVERY,
CASE WHEN DEL_EAR_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_EAR_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_EAR_ACC,
DEL_EAR_CNF,
CASE WHEN DEL_EAR_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_EAR_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_EAR_REQ,
CASE WHEN DEL_LAT_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_LAT_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_LAT_ACC,
DEL_LAT_CNF,
CASE WHEN DEL_LAT_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_LAT_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_LAT_REQ,
CASE WHEN DEL_SEL_TIME = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_SEL_TIME),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_SEL_TIME,
DES_LOC_IATACODE,
DES_LOC_ID,
DES_LOC_KEY,
DES_LOC_UNLOCODE,
DES_STAGE_KEY,
DGO_CHECK_ERROR,
DGO_DOC_BASED,
DGO_INDICATOR,
DG_ADR_NO_EXEMPTION,
DG_ADR_PTS_UNI,
DG_ADR_PTS_VAL,
DIRECT_EWM_ACTIVE,
DLV_BILLING,
DLV_BLOCKED,
DLV_BLOCK_REASON,
DLV_CR_BY_TM,
DLV_DISTRIBUTION,
DLV_FU_BTD_TCO,
DLV_GOODS_MVMNT,
DLV_PACKING,
DLV_PICKING,
DLV_PLANNING,
DLV_SPLTUPD_STATUS,
DLV_SPLTUPD_TIME,
DT_ORD_COMB_IND,
DT_PRIORITY_C,
EDI_INDICATOR,
EEW_TRQ_ROOT,
EM_ACTIVE,
EXECUTION,
FAG_ITEM_KEY,
FAG_KEY,
FOLLOWUP_TRQ_EXP,
GRO_VOL_UNI,
GRO_VOL_VAL,
GRO_WEI_UNI,
GRO_WEI_VAL,
GT_EXP_DECL_LSP,
GT_IMP_DECL_LSP,
INC_CLASS_CODE,
INC_LOC_EAR_ACC,
INC_LOC_EAR_REQ,
INC_LOC_ID,
INC_LOC_KEY,
INC_LOC_LAT_ACC,
INC_LOC_LAT_REQ,
INC_LOC_STAGE_RULE,
INC_TRANSF_LOC_N,
INS_BY_LSP_IND,
INS_ENABLE,
INVC_INT_ENABLE,
INVOICING_ENABLE,
LIFECYCLE,
LOGISTICAL_RELEVANCE,
LOGSYS,
MANDT,
MOT,
MOT_CAT,
MOVEM_TYPE,
MULTI_INV_PTY,
NET_WEI_UNI,
NET_WEI_VAL,
ONE_ITEM_ALLOWED,
OP_ADDRESS_ID,
OP_AMT_CLC_CUR,
OP_AMT_CLC_VAL,
OP_PAYMENT_RECVD,
OP_PAYTERM,
OP_PREPAY_REQD,
TO_VARCHAR(ADD_DAYS(ORDER_DATE,15),'YYYYMMDD') AS ORDER_DATE,
ORDER_PARTY_ID,
ORDER_PARTY_KEY,
PARTNER_SCHEMA,
PAYMENT_STATUS,
PD_CTRL_CODE,
CASE WHEN PIC_EAR_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_EAR_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_EAR_ACC,
PIC_EAR_CNF,
CASE WHEN PIC_EAR_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_EAR_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_EAR_REQ,
CASE WHEN PIC_LAT_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_LAT_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_LAT_ACC,
PIC_LAT_CNF,
CASE WHEN PIC_LAT_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_LAT_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_LAT_REQ,
CASE WHEN PIC_SEL_TIME = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_SEL_TIME),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_SEL_TIME,
PKGUN_WEI_UNI,
PKGUN_WEI_VAL,
PLANNING,
PLAN_DATA_INCOMP,
PLN_REQ_CNF_QTY,
QUA_PCS2_UNI,
QUA_PCS2_VAL,
QUA_PCS_UNI,
QUA_PCS_VAL,
QUOT_ASSIGNMENT,
QUOT_CREATE_TRQ,
QUOT_MODE,
QUOT_PRLIMIT_CUR,
QUOT_PRLIMIT_VAL,
QUOT_TRQ_KEY,
QUOT_VALID_FROM,
QUOT_VALID_TO,
REGULATED_AGENT,
RFQ_REJ_R_CODE,
RFQ_RESPDUEDTIME,
RFQ_RESP_CODE,
SALES_GROUP_ID,
SALES_OFF_ID,
SALES_ORG_ID,
SCI_CODE,
SENDER_PARTY_ID,
SERVICE_PRODUCT_ID,
SHIPMENT_LIKE,
SHIPPER_ID,
SHIPPER_KEY,
SHIPPING_TYPE,
SHPPLN_BLOCKED,
SHPPLN_BLOCK_REASON,
SP_ADDRESS_ID,
SRC_LOC_CSS,
SRC_LOC_EXPIRY_DATE,
SRC_LOC_IATACODE,
SRC_LOC_ID,
SRC_LOC_KEY,
SRC_LOC_REGREFNO,
SRC_LOC_UNLOCODE,
SRC_STAGE_KEY,
STAGE_DET_STRAT,
STAGE_PROFILE,
TCC_ENABLE,
TCC_EVENT_PROFILE,
TCC_INT_ENABLE,
TRACKING_NO,
TRAFFIC_DIRECT,
TRANSSRVLVL_CODE,
TRQ_CAT,
TRQ_CNF_CR_TYPE,
TRQ_CNF_SUB_IND,
CASE WHEN TRQ_ID = '$1' THEN '$1' WHEN TRQ_ID = '' THEN '' ELSE CONCAT(LTRIM(TRQ_ID,'0'),:WAVE_ID) END AS TRQ_ID,
TRQ_TEMPLATE_IND,
TRQ_TYPE,
TSP_ADDRESS_ID,
TSP_AIRLC,
TSP_AIRLCAWB,
TSP_ID,
TSP_KEY,
TSP_SCAC,
UNCONTROLLED,
UNLOAD_POINT,
WF_COUNT,
WM_LOGSYS,
WM_WH_NUMBER
FROM "SYSTEM"."/SCMTMS/D_TRQROT";



--generate lines of /SCMTMS/D_TRQSTG
D_TRQSTG =
SELECT 
AGREEMENT_PARTY,
REPLACE(DB_KEY,:SUB_STR,:WAVE_ID) AS DB_KEY,
CASE WHEN DEL_EAR_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_EAR_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_EAR_ACC,
CASE WHEN DEL_EAR_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_EAR_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_EAR_REQ,
CASE WHEN DEL_LAT_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_LAT_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_LAT_ACC,
CASE WHEN DEL_LAT_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(DEL_LAT_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS DEL_LAT_REQ,
DES_LOC_IATACODE,
DES_LOC_ID,
DES_LOC_KEY,
DES_LOC_UNLOCODE,
EEW_TRQ_STAGE,
EXTERNAL_FA_ID,
EXTERNAL_FA_ITEM_ID,
EXTERNAL_FA_VERSION,
MANDT,
MOT,
MOT_CAT,
MTR_TCO,
REPLACE(PARENT_KEY,:SUB_STR,:WAVE_ID) AS PARENT_KEY,
CASE WHEN PIC_EAR_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_EAR_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_EAR_ACC,
CASE WHEN PIC_EAR_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_EAR_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_EAR_REQ,
CASE WHEN PIC_LAT_ACC = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_LAT_ACC),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_LAT_ACC,
CASE WHEN PIC_LAT_REQ = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(PIC_LAT_REQ),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS PIC_LAT_REQ,
CASE WHEN PRED_STAGE_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(PRED_STAGE_KEY,:SUB_STR,:WAVE_ID) END AS PRED_STAGE_KEY,
SRC_LOC_IATACODE,
SRC_LOC_ID,
SRC_LOC_KEY,
SRC_LOC_UNLOCODE,
STAGE_ID,
STAGE_TYPE,
CASE WHEN SUCC_STAGE_KEY = '00000000000000000000000000000000' THEN '00000000000000000000000000000000' ELSE REPLACE(SUCC_STAGE_KEY,:SUB_STR,:WAVE_ID) END AS SUCC_STAGE_KEY,
TSP_AIRLC,
TSP_AIRLCAWB,
TSP_ID,
TSP_KEY,
TSP_PYMT_ID,
TSP_PYMT_KEY,
TSP_PYMT_SCAC,
TSP_SCAC,
UNLOAD_POINT
FROM "SYSTEM"."/SCMTMS/D_TRQSTG";




--generate lines of /SCMTMS/RES_POS
RES_POS = 
SELECT 
CLIENT,
LAST_REPORTED,
LATITUDE,
LOCATION_UUID,
LONGITUDE,
REPLACE(RESOURCE_ID,:SUB_STR,:WAVE_ID) AS RESOURCE_ID,
CASE WHEN RESOURCE_NAME = '' THEN '' ELSE CONCAT(RESOURCE_NAME,:WAVE_ID) END AS RESOURCE_NAME,
CASE WHEN TIMESTAMP = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(TIMESTAMP),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS TIMESTAMP,
TRANS_ACTIVITY
FROM "SYSTEM"."/SCMTMS/RES_POS";



--generate lines of /TRP/RES_SHTRK
RES_SHTRK =
SELECT 
CARGO_LOADING_STATUS,
CASE WHEN CHANGED_ON = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(CHANGED_ON),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS CHANGED_ON,
CASE WHEN GTI_ON = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(GTI_ON),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS GTI_ON,
LOCATION_UUID,
MANDT,
MOVEMENT_STATUS,
REPLACE(RESOURCE_ID,:SUB_STR,:WAVE_ID) AS RESOURCE_ID
FROM "SYSTEM"."/TRP/RES_SHTRK";



--generate lines of /TRP/RES_TRKLOG
RES_TRKLOG = 
SELECT 
REPLACE(DB_KEY,:SUB_STR,:WAVE_ID) AS DB_KEY,
LOCATION_UUID,
LOG_FIELD,
LOG_TABLE,
MANDT,
REPLACE(RESOURCE_ID,:SUB_STR,:WAVE_ID) AS RESOURCE_ID,
TRK_CAT,
CASE WHEN TRK_LOG_TIME = 0 THEN '0' ELSE TO_VARCHAR((ADD_SECONDS(TO_TIMESTAMP(TRK_LOG_TIME),:SECOND_DIFF)),'YYYYMMDDHH24MISS') END AS TRK_LOG_TIME,
VALUE_NEW,
VALUE_OLD
FROM "SYSTEM"."/TRP/RES_TRKLOG"
WHERE LEFT(TO_VARCHAR(DB_KEY),8) = :SUB_STR;


--generate lines of /SAPAPO/RES_HEAD
--NEW_RES =
--SELECT DISTINCT VEHICLERES_ID AS RES_NAME FROM :D_TORITE
--UNION
--SELECT DISTINCT TURES_ID AS RES_NAME FROM :D_TORITE
--UNION
--SELECT DISTINCT VEHICLERES_ID AS RES_NAME FROM :D_TRQITM
--UNION
--SELECT DISTINCT TURES_ID AS RES_NAME FROM :D_TRQITM;

RES_HEAD =
SELECT 
T1.BEGTI AS BEGTI,
T1.BREAKTIME AS BREAKTIME,
T1.BR_QUANT AS BR_QUANT,
T1.BR_QUNIT AS BR_QUNIT,
T1.BR_TIME AS BR_TIME,
T1.BR_TUNIT AS BR_TUNIT,
T1.BUFFERTIME AS BUFFERTIME,
T1.BUFFERTIME_UNIT AS BUFFERTIME_UNIT,
T1.CALENDAR AS CALENDAR,
T1.CAMPAIGN_PPDS AS CAMPAIGN_PPDS,
T1.CAMPAIGN_SNP AS CAMPAIGN_SNP,
T1.CAPACITY_A AS CAPACITY_A,
T1.CAPACITY_A_UNIT AS CAPACITY_A_UNIT,
T1.CHANGEDATE AS CHANGEDATE,
T1.CHANGEUSER AS CHANGEUSER,
T1.DEFINE_BUCKETS AS DEFINE_BUCKETS,
T1.DIMENSION AS DIMENSION,
T1.ENDTI AS ENDTI,
T1.FINITE_PLANNING AS FINITE_PLANNING,
T1.FINITY_LEVEL AS FINITY_LEVEL,
T1.INDIVRES_CAP AS INDIVRES_CAP,
T1.IS_BOTTLENECK AS IS_BOTTLENECK,
T1.LCRESID AS LCRESID,
T1.LC_DAYS_MINUS AS LC_DAYS_MINUS,
T1.LC_DAYS_PLUS AS LC_DAYS_PLUS,
T1.LOCID AS LOCID,
T1.LOSS_FACTOR AS LOSS_FACTOR,
T1.MANDT AS MANDT,
T1.MATRIX_ID AS MATRIX_ID,
T1.MDRMODEL AS MDRMODEL,
T1.MIN_GAPS AS MIN_GAPS,
T1.MIN_OVERLAP AS MIN_OVERLAP,
T1.MIN_OVERLAP_UNIT AS MIN_OVERLAP_UNIT,
T1.MIX_PLAN_TYPE AS MIX_PLAN_TYPE,
T1.MULTIPLE_PRODUCT AS MULTIPLE_PRODUCT,
CASE WHEN T1.NAME = '' THEN '' ELSE CONCAT(T1.NAME,:WAVE_ID) END AS NAME,
T1.NOINDIVRES AS NOINDIVRES,
T1.NOINDIVRES_UNIT AS NOINDIVRES_UNIT,
T1.NUM_OF_PERIODS AS NUM_OF_PERIODS,
T1.OUTPUT_RATE AS OUTPUT_RATE,
T1.OVERLAP_BUCKETS AS OVERLAP_BUCKETS,
T1.OVERLOAD AS OVERLOAD,
T1.PERIOD AS PERIOD,
T1.PLANNER AS PLANNER,
T1.PLANNER_SNP AS PLANNER_SNP,
T1.REFUID AS REFUID,
T1.REF_PROCTIME AS REF_PROCTIME,
T1.REF_PTIME_UNIT AS REF_PTIME_UNIT,
T1.RESOURCE_GROUP AS RESOURCE_GROUP,
T1.RESTYPE AS RESTYPE,
REPLACE(T1.RESUID,:RES_PREFIX,:WAVE_ID) AS RESUID,
T1.RITT_FLG AS RITT_FLG,
T1.SHRFACT AS SHRFACT,
T1.SIMSESSID AS SIMSESSID,
T1.SIMVERSID AS SIMVERSID,
T1.SINGLE_RES_LC AS SINGLE_RES_LC,
T1.SINGLE_RES_TID AS SINGLE_RES_TID,
T1.SNPLC AS SNPLC,
T1.SORT AS SORT,
T1.START_ON_GRID AS START_ON_GRID,
T1.STORAGE_CAPABLE AS STORAGE_CAPABLE,
T1.STORAGE_TO_ZERO AS STORAGE_TO_ZERO,
T1.STRFACT AS STRFACT,
T1.SYNC_COMPATIBLE AS SYNC_COMPATIBLE,
T1.SYNC_START AS SYNC_START,
T1.TAKTS AS TAKTS,
T1.TRATY AS TRATY,
T1.TSTREAMID AS TSTREAMID,
T1.TSTREAM_EXTERNAL AS TSTREAM_EXTERNAL,
T1.TYPE AS TYPE,
T1.TZONE AS TZONE,
T1.UNDERLOAD AS UNDERLOAD,
T1.UNIT AS UNIT,
T1.UTILIZATION AS UTILIZATION,
T1.UTIL_BUCKET AS UTIL_BUCKET,
T1.VERSION_ACTIVE AS VERSION_ACTIVE
FROM "SYSTEM"."/SAPAPO/RES_HEAD" AS T1;
--INNER JOIN :NEW_RES AS T2
--ON CONCAT(T1.NAME,:WAVE_ID) = T2.RES_NAME;



--generate lines of /SCMB/RESTMSHD
RESTMSHD =
SELECT
T1.ADR_LIMIT_REL AS ADR_LIMIT_REL,
T1.ALT_QUAN_UNITS AS ALT_QUAN_UNITS,
T1.ALT_QUAN_UNITS_UOM AS ALT_QUAN_UNITS_UOM,
T1.AXGRP_DIST_UOM_01 AS AXGRP_DIST_UOM_01,
T1.AXGRP_DIST_UOM_02 AS AXGRP_DIST_UOM_02,
T1.AXGRP_DIST_UOM_03 AS AXGRP_DIST_UOM_03,
T1.AXGRP_EMPTY_WEIGHT_01 AS AXGRP_EMPTY_WEIGHT_01,
T1.AXGRP_EMPTY_WEIGHT_02 AS AXGRP_EMPTY_WEIGHT_02,
T1.AXGRP_EMPTY_WEIGHT_03 AS AXGRP_EMPTY_WEIGHT_03,
T1.AXGRP_MAX_WEIGHT_01 AS AXGRP_MAX_WEIGHT_01,
T1.AXGRP_MAX_WEIGHT_02 AS AXGRP_MAX_WEIGHT_02,
T1.AXGRP_MAX_WEIGHT_03 AS AXGRP_MAX_WEIGHT_03,
T1.AXGRP_POSN_01 AS AXGRP_POSN_01,
T1.AXGRP_POSN_02 AS AXGRP_POSN_02,
T1.AXGRP_POSN_03 AS AXGRP_POSN_03,
T1.AXGRP_WEIGHT_UOM_01 AS AXGRP_WEIGHT_UOM_01,
T1.AXGRP_WEIGHT_UOM_02 AS AXGRP_WEIGHT_UOM_02,
T1.AXGRP_WEIGHT_UOM_03 AS AXGRP_WEIGHT_UOM_03,
T1.AXLE_COUNT AS AXLE_COUNT,
T1.AXLE_DRIVING_IND_01 AS AXLE_DRIVING_IND_01,
T1.AXLE_DRIVING_IND_02 AS AXLE_DRIVING_IND_02,
T1.AXLE_DRIVING_IND_03 AS AXLE_DRIVING_IND_03,
T1.AXLE_SPACE_DIST_01 AS AXLE_SPACE_DIST_01,
T1.AXLE_SPACE_DIST_02 AS AXLE_SPACE_DIST_02,
T1.AXLE_SPACE_DIST_03 AS AXLE_SPACE_DIST_03,
T1.AXLE_SPACNG_DIST AS AXLE_SPACNG_DIST,
T1.AXLE_SPACNG_DIST_UOM AS AXLE_SPACNG_DIST_UOM,
T1.AXLE_STEERING_IND_01 AS AXLE_STEERING_IND_01,
T1.AXLE_STEERING_IND_02 AS AXLE_STEERING_IND_02,
T1.AXLE_STEERING_IND_03 AS AXLE_STEERING_IND_03,
T1.AXLE_TYPE_01 AS AXLE_TYPE_01,
T1.AXLE_TYPE_02 AS AXLE_TYPE_02,
T1.AXLE_TYPE_03 AS AXLE_TYPE_03,
T1.BUILDDATE AS BUILDDATE,
T1.CARGO_BODY_DIST AS CARGO_BODY_DIST,
T1.CNTRL_ATM AS CNTRL_ATM,
T1.CONNECTOR_DIST AS CONNECTOR_DIST,
T1.CONNECTOR_MAX_WGHT AS CONNECTOR_MAX_WGHT,
T1.COOLING_UNIT_MNFTR AS COOLING_UNIT_MNFTR,
T1.COOLING_UNIT_MODEL AS COOLING_UNIT_MODEL,
T1.COUNTRY_VEHIC_ID AS COUNTRY_VEHIC_ID,
T1.COUPLERSTYLE AS COUPLERSTYLE,
T1.CUBIC_CAPACITY AS CUBIC_CAPACITY,
T1.CUBIC_CAPA_UOM AS CUBIC_CAPA_UOM,
T1.DATACORDER AS DATACORDER,
T1.DESHUMIDIFY AS DESHUMIDIFY,
T1.DOOR_HEIGHT AS DOOR_HEIGHT,
T1.DOOR_WH_UOM AS DOOR_WH_UOM,
T1.DOOR_WIDTH AS DOOR_WIDTH,
T1.DRAFT_GEAR_TYPE AS DRAFT_GEAR_TYPE,
T1.EEW_TMSRES_AATR AS EEW_TMSRES_AATR,
T1.EEW_TRP_TMSRES AS EEW_TRP_TMSRES,
T1.EM_RELEVANCE AS EM_RELEVANCE,
T1.ENTITLED AS ENTITLED,
T1.ENTITLEDUID AS ENTITLEDUID,
T1.EQUISUPPL AS EQUISUPPL,
T1.EQUISZTP AS EQUISZTP,
T1.EQUITYPE AS EQUITYPE,
T1.EXTNL_CLADDING AS EXTNL_CLADDING,
T1.EXT_TTYPE_FLG AS EXT_TTYPE_FLG,
T1.EXT_TTYPE_NUM AS EXT_TTYPE_NUM,
T1.FLOWER_BULB_AGRMNT AS FLOWER_BULB_AGRMNT,
T1.FOOD_GRADE_IND AS FOOD_GRADE_IND,
T1.IATA_COMPLIANT AS IATA_COMPLIANT,
T1.INSERVICEDATE AS INSERVICEDATE,
T1.INTERNAL_HEIGHT AS INTERNAL_HEIGHT,
T1.INTERNAL_LENGTH AS INTERNAL_LENGTH,
T1.INTERNAL_LWH_UOM AS INTERNAL_LWH_UOM,
T1.INTERNAL_WIDTH AS INTERNAL_WIDTH,
T1.KINGPIN_DIST AS KINGPIN_DIST,
T1.KINGPIN_MAX_WGHT AS KINGPIN_MAX_WGHT,
T1.LEASE_CONTRACT_REF AS LEASE_CONTRACT_REF,
T1.LOAD_OPENING_LENGTH AS LOAD_OPENING_LENGTH,
T1.LOAD_OPENING_LW_UOM AS LOAD_OPENING_LW_UOM,
T1.LOAD_OPENING_WIDTH AS LOAD_OPENING_WIDTH,
T1.MANDT AS MANDT,
T1.MAX_AXLE_WEIGHT AS MAX_AXLE_WEIGHT,
T1.MAX_AXLE_WEIGHT_UOM AS MAX_AXLE_WEIGHT_UOM,
T1.MAX_GROSS_WEIGHT AS MAX_GROSS_WEIGHT,
T1.MAX_GROSS_WEIGHT_UOM AS MAX_GROSS_WEIGHT_UOM,
T1.MAX_HEIGHT AS MAX_HEIGHT,
T1.MAX_LENGTH AS MAX_LENGTH,
T1.MAX_LWH_UOM AS MAX_LWH_UOM,
T1.MAX_TRAILING_LOAD AS MAX_TRAILING_LOAD,
T1.MAX_TRAIL_LOAD_UOM AS MAX_TRAIL_LOAD_UOM,
T1.MAX_WIDTH AS MAX_WIDTH,
T1.MINREQSEALS AS MINREQSEALS,
CASE WHEN T1.NAME = '' THEN '' ELSE CONCAT(T1.NAME,:WAVE_ID) END AS NAME,
T1.OFF_HIRE_DT AS OFF_HIRE_DT,
T1.OFF_HIRE_LOC AS OFF_HIRE_LOC,
T1.ON_HIRE_DT AS ON_HIRE_DT,
T1.ON_HIRE_LOC AS ON_HIRE_LOC,
T1.ORGCENTRE AS ORGCENTRE,
T1.OWNER AS OWNER,
T1.OWNERSHIP_CODE AS OWNERSHIP_CODE,
T1.OWNERUID AS OWNERUID,
T1.PAYLOAD_WEIGHT AS PAYLOAD_WEIGHT,
T1.PAYLOAD_WGHT_UOM AS PAYLOAD_WGHT_UOM,
T1.PLATECOUNTRY AS PLATECOUNTRY,
T1.PLATENUMBER AS PLATENUMBER,
T1.PLATFORM_HEIGHT AS PLATFORM_HEIGHT,
T1.PLATFORM_HEIGHT_UOM AS PLATFORM_HEIGHT_UOM,
T1.PLN_BLOCK AS PLN_BLOCK,
T1.QUAN_UNITS AS QUAN_UNITS,
T1.QUAN_UNITS_UOM AS QUAN_UNITS_UOM,
T1.REFMATID AS REFMATID,
REPLACE(T1.RESID,:RES_PREFIX,:WAVE_ID) AS RESID,
T1.RESOURCE_CONDITION AS RESOURCE_CONDITION,
T1.RESTYPE AS RESTYPE,
T1.RES_CLASS AS RES_CLASS,
T1.SHIPPER_OWNED AS SHIPPER_OWNED,
T1.SPECIAL_INSTRUCTION AS SPECIAL_INSTRUCTION,
T1.SPLITDECK_MAX_WGHT AS SPLITDECK_MAX_WGHT,
T1.SPLITDECK_POSN AS SPLITDECK_POSN,
T1.TARE_VOLUME AS TARE_VOLUME,
T1.TARE_VOLUME_UOM AS TARE_VOLUME_UOM,
T1.TARE_WEIGHT AS TARE_WEIGHT,
T1.TARE_WEIGHT_UOM AS TARE_WEIGHT_UOM,
T1.TECHN_DIST_UOM AS TECHN_DIST_UOM,
T1.TEMPLATE AS TEMPLATE,
T1.TEMP_CONTROL AS TEMP_CONTROL,
T1.TEMP_CTRL_MAX AS TEMP_CTRL_MAX,
T1.TEMP_CTRL_MIN AS TEMP_CTRL_MIN,
T1.TEMP_UOM AS TEMP_UOM,
T1.TEU_COUNT AS TEU_COUNT,
REPLACE(T1.TMSRESUID,:SUB_STR,:WAVE_ID) AS TMSRESUID,
T1.TOPDECK_HEIGHT AS TOPDECK_HEIGHT,
T1.TOPDECK_HEIGHT_UOM AS TOPDECK_HEIGHT_UOM,
T1.TYPE_CLASS AS TYPE_CLASS,
T1.ULD_CLASS AS ULD_CLASS,
T1.USDA AS USDA,
T1.VALID_FROM AS VALID_FROM,
T1.VALID_TO AS VALID_TO,
T1.VENTILATED AS VENTILATED,
T1.WGHT_LOADING_UOM AS WGHT_LOADING_UOM,
T1.WHEEL_BEARNG_TYPE AS WHEEL_BEARNG_TYPE,
T1.WHEEL_DIAMETER AS WHEEL_DIAMETER,
T1.WHEEL_DIAMETER_UOM AS WHEEL_DIAMETER_UOM
FROM "SYSTEM"."/SCMB/RESTMSHD" AS T1;
--INNER JOIN :NEW_RES AS T2 
--ON CONCAT(T1.NAME,:WAVE_ID) = T2.RES_NAME;



--generate lines of /SAPAPO/RESDOWN
RESDOWN =
SELECT 
T1.BASE_DOCUMENT_CAT AS BASE_DOCUMENT_CAT,
T1.BASE_DOCUMENT_ID AS BASE_DOCUMENT_ID,
T1.BEGDA AS BEGDA,
T1.BEGTI AS BEGTI,
REPLACE(T1.DOWNID,:RES_PREFIX,:WAVE_ID) AS DOWNID,
T1.ENDDA AS ENDDA,
T1.ENDTI AS ENDTI,
T1.LOCID AS LOCID,
T1.MANDT AS MANDT,
T1.NOINDIVRES AS NOINDIVRES,
T1.NOINDIVRES_UNIT AS NOINDIVRES_UNIT,
T1.ORDID AS ORDID,
REPLACE(T1.RESUID,:RES_PREFIX,:WAVE_ID) AS RESUID,
T1.SIMSESSID AS SIMSESSID,
T1.SIMVERSID AS SIMVERSID,
T1.TYPE AS TYPE,
T1.TZONE AS TZONE
FROM "SYSTEM"."/SAPAPO/RESDOWN" AS T1;
--INNER JOIN :RES_HEAD AS T2
--ON REPLACE(T1.RESUID,:RES_PREFIX,:WAVE_ID) = T2.RESUID;


--start insert
INSERT INTO "SAPX0M"."/SAPAPO/RESDOWN" (
BASE_DOCUMENT_CAT,
BASE_DOCUMENT_ID,
BEGDA,
BEGTI,
DOWNID,
ENDDA,
ENDTI,
LOCID,
MANDT,
NOINDIVRES,
NOINDIVRES_UNIT,
ORDID,
RESUID,
SIMSESSID,
SIMVERSID,
TYPE,
TZONE ) SELECT * FROM :RESDOWN;

INSERT INTO "SAPX0M"."/SAPAPO/RES_HEAD" (
BEGTI,
BREAKTIME,
BR_QUANT,
BR_QUNIT,
BR_TIME,
BR_TUNIT,
BUFFERTIME,
BUFFERTIME_UNIT,
CALENDAR,
CAMPAIGN_PPDS,
CAMPAIGN_SNP,
CAPACITY_A,
CAPACITY_A_UNIT,
CHANGEDATE,
CHANGEUSER,
DEFINE_BUCKETS,
DIMENSION,
ENDTI,
FINITE_PLANNING,
FINITY_LEVEL,
INDIVRES_CAP,
IS_BOTTLENECK,
LCRESID,
LC_DAYS_MINUS,
LC_DAYS_PLUS,
LOCID,
LOSS_FACTOR,
MANDT,
MATRIX_ID,
MDRMODEL,
MIN_GAPS,
MIN_OVERLAP,
MIN_OVERLAP_UNIT,
MIX_PLAN_TYPE,
MULTIPLE_PRODUCT,
NAME,
NOINDIVRES,
NOINDIVRES_UNIT,
NUM_OF_PERIODS,
OUTPUT_RATE,
OVERLAP_BUCKETS,
OVERLOAD,
PERIOD,
PLANNER,
PLANNER_SNP,
REFUID,
REF_PROCTIME,
REF_PTIME_UNIT,
RESOURCE_GROUP,
RESTYPE,
RESUID,
RITT_FLG,
SHRFACT,
SIMSESSID,
SIMVERSID,
SINGLE_RES_LC,
SINGLE_RES_TID,
SNPLC,
SORT,
START_ON_GRID,
STORAGE_CAPABLE,
STORAGE_TO_ZERO,
STRFACT,
SYNC_COMPATIBLE,
SYNC_START,
TAKTS,
TRATY,
TSTREAMID,
TSTREAM_EXTERNAL,
TYPE,
TZONE,
UNDERLOAD,
UNIT,
UTILIZATION,
UTIL_BUCKET,
VERSION_ACTIVE ) SELECT * FROM :RES_HEAD;

INSERT INTO "SAPX0M"."/SCMB/RESTMSHD" (
ADR_LIMIT_REL,
ALT_QUAN_UNITS,
ALT_QUAN_UNITS_UOM,
AXGRP_DIST_UOM_01,
AXGRP_DIST_UOM_02,
AXGRP_DIST_UOM_03,
AXGRP_EMPTY_WEIGHT_01,
AXGRP_EMPTY_WEIGHT_02,
AXGRP_EMPTY_WEIGHT_03,
AXGRP_MAX_WEIGHT_01,
AXGRP_MAX_WEIGHT_02,
AXGRP_MAX_WEIGHT_03,
AXGRP_POSN_01,
AXGRP_POSN_02,
AXGRP_POSN_03,
AXGRP_WEIGHT_UOM_01,
AXGRP_WEIGHT_UOM_02,
AXGRP_WEIGHT_UOM_03,
AXLE_COUNT,
AXLE_DRIVING_IND_01,
AXLE_DRIVING_IND_02,
AXLE_DRIVING_IND_03,
AXLE_SPACE_DIST_01,
AXLE_SPACE_DIST_02,
AXLE_SPACE_DIST_03,
AXLE_SPACNG_DIST,
AXLE_SPACNG_DIST_UOM,
AXLE_STEERING_IND_01,
AXLE_STEERING_IND_02,
AXLE_STEERING_IND_03,
AXLE_TYPE_01,
AXLE_TYPE_02,
AXLE_TYPE_03,
BUILDDATE,
CARGO_BODY_DIST,
CNTRL_ATM,
CONNECTOR_DIST,
CONNECTOR_MAX_WGHT,
COOLING_UNIT_MNFTR,
COOLING_UNIT_MODEL,
COUNTRY_VEHIC_ID,
COUPLERSTYLE,
CUBIC_CAPACITY,
CUBIC_CAPA_UOM,
DATACORDER,
DESHUMIDIFY,
DOOR_HEIGHT,
DOOR_WH_UOM,
DOOR_WIDTH,
DRAFT_GEAR_TYPE,
EEW_TMSRES_AATR,
EEW_TRP_TMSRES,
EM_RELEVANCE,
ENTITLED,
ENTITLEDUID,
EQUISUPPL,
EQUISZTP,
EQUITYPE,
EXTNL_CLADDING,
EXT_TTYPE_FLG,
EXT_TTYPE_NUM,
FLOWER_BULB_AGRMNT,
FOOD_GRADE_IND,
IATA_COMPLIANT,
INSERVICEDATE,
INTERNAL_HEIGHT,
INTERNAL_LENGTH,
INTERNAL_LWH_UOM,
INTERNAL_WIDTH,
KINGPIN_DIST,
KINGPIN_MAX_WGHT,
LEASE_CONTRACT_REF,
LOAD_OPENING_LENGTH,
LOAD_OPENING_LW_UOM,
LOAD_OPENING_WIDTH,
MANDT,
MAX_AXLE_WEIGHT,
MAX_AXLE_WEIGHT_UOM,
MAX_GROSS_WEIGHT,
MAX_GROSS_WEIGHT_UOM,
MAX_HEIGHT,
MAX_LENGTH,
MAX_LWH_UOM,
MAX_TRAILING_LOAD,
MAX_TRAIL_LOAD_UOM,
MAX_WIDTH,
MINREQSEALS,
NAME,
OFF_HIRE_DT,
OFF_HIRE_LOC,
ON_HIRE_DT,
ON_HIRE_LOC,
ORGCENTRE,
OWNER,
OWNERSHIP_CODE,
OWNERUID,
PAYLOAD_WEIGHT,
PAYLOAD_WGHT_UOM,
PLATECOUNTRY,
PLATENUMBER,
PLATFORM_HEIGHT,
PLATFORM_HEIGHT_UOM,
PLN_BLOCK,
QUAN_UNITS,
QUAN_UNITS_UOM,
REFMATID,
RESID,
RESOURCE_CONDITION,
RESTYPE,
RES_CLASS,
SHIPPER_OWNED,
SPECIAL_INSTRUCTION,
SPLITDECK_MAX_WGHT,
SPLITDECK_POSN,
TARE_VOLUME,
TARE_VOLUME_UOM,
TARE_WEIGHT,
TARE_WEIGHT_UOM,
TECHN_DIST_UOM,
TEMPLATE,
TEMP_CONTROL,
TEMP_CTRL_MAX,
TEMP_CTRL_MIN,
TEMP_UOM,
TEU_COUNT,
TMSRESUID,
TOPDECK_HEIGHT,
TOPDECK_HEIGHT_UOM,
TYPE_CLASS,
ULD_CLASS,
USDA,
VALID_FROM,
VALID_TO,
VENTILATED,
WGHT_LOADING_UOM,
WHEEL_BEARNG_TYPE,
WHEEL_DIAMETER,
WHEEL_DIAMETER_UOM ) SELECT * FROM :RESTMSHD;

INSERT INTO "SAPX0M"."/SCMTMS/D_TORCC" (
CCODE,
CCODE_TYPE,
DB_KEY,
EEW_TRQ_CCODE,
MANDT,
PARENT_KEY,
REF_CCODE_KEY,
ROOT_KEY ) SELECT * FROM :D_TORCC;

INSERT INTO "SAPX0M"."/SCMTMS/D_TOREXE" (
ACTUAL_DATE,
ACTUAL_TZONE,
BASE_UOM_UNI,
BASE_UOM_VAL,
CHANGED_BY,
CHANGED_ON,
CONT_CNT_UNI,
CONT_CNT_VAL,
CREATED_BY,
CREATED_ON,
DATACS,
DATAID,
DB_KEY,
DG_ADR_PTS_UNI,
DG_ADR_PTS_VAL,
DISCREPANCY,
DISCR_INSIDE_TLR,
DISCR_NO_BLOCK,
DISCR_TYPE,
EEW_TOR_EXEC,
EM_WIT,
ESTIMATED_DATE,
EVENT_CODE,
EVENT_REASON,
EVENT_REASON_CODE,
EVENT_REVOKED,
EVENT_STATUS,
EXECINFO_SOURCE,
EXECUTION_ID,
EXEC_ROLE_CAT,
EXP_END_DATE,
EXT_LOC_ID,
EXT_LOC_ID2,
EXT_LOC_TYPE,
EXT_LOC_UUID,
GEOALT,
GEOLAT,
GEOLON,
GRO_VOL_UNI,
GRO_VOL_VAL,
GRO_WEI_UNI,
GRO_WEI_VAL,
MANDT,
NET_DURATION,
NET_WEI_UNI,
NET_WEI_VAL,
ORIG_EXEC_KEY,
PARENT_KEY,
PKGUN_WEI_UNI,
PKGUN_WEI_VAL,
QTY_DISCREPANCY,
QUA_PCS2_UNI,
QUA_PCS2_VAL,
QUA_PCS_UNI,
QUA_PCS_VAL,
REF_EVENT_CODE,
SNDCOD,
SNDID,
TORITMUUID,
TORSTOPUUID,
TRANS_ACTIVITY ) SELECT * FROM :D_TOREXE;

INSERT INTO "SAPX0M"."/SCMTMS/D_TORITE" (
AIR_EXCH_RATE,
AIR_EXCH_UOM,
AIR_HUMIDITY,
AMT_GDSVC_CUR,
AMT_GDSVC_VAL,
AMT_GDSV_CUR,
AMT_GDSV_VAL,
AMT_HVAL_CAR_IND,
AMT_INSV_CUR,
AMT_INSV_VAL,
ASSGN_END,
ASSGN_START,
BASE_BTDITEM_ID,
BASE_BTDITEM_TCO,
BASE_BTD_ID,
BASE_BTD_LOGSYS,
BASE_BTD_TCO,
BASE_BTD_VERSION,
BASE_UOM_UNI,
BASE_UOM_UNICAP,
BASE_UOM_VAL,
BASE_UOM_VALCAP,
CAPREF_KEY,
CARGO_RECEIPT,
CARRIER_PROD_ID,
CNF_CONT_CNT_UNI,
CNF_CONT_CNT_VAL,
CNF_GRO_VOL_UNI,
CNF_GRO_VOL_VAL,
CNF_GRO_WEI_UNI,
CNF_GRO_WEI_VAL,
CNF_QUA_PCS2_UNI,
CNF_QUA_PCS2_VAL,
CNF_QUA_PCS_UNI,
CNF_QUA_PCS_VAL,
CONF_STATUS,
CONSIGNEE_ID,
CONSIGNEE_KEY,
CONS_CONT,
CONT_CNT_UNI,
CONT_CNT_UNICAP,
CONT_CNT_VAL,
CONT_CNT_VALCAP,
COUNTRY,
COUNTRY_VEHIC_ID,
CP_ADDRESS_ID,
CT_SEQ,
CT_TYPE,
CUSTOMS_HANDLG,
DB_KEY,
DEL_EAR_ACCTRQ,
DEL_EAR_REQTRQ,
DEL_LAT_ACCTRQ,
DEL_LAT_REQTRQ,
DENSITY_FACTOR,
DES_LOC_IATACODETRQ,
DES_LOC_IDTRQ,
DES_LOC_KEYTRQ,
DES_LOC_UNLOCODETRQ,
DES_STOP_KEY,
DES_STOP_KEY_A,
DGO_CHECK_ERROR,
DGO_DOC_BASED,
DGO_INDICATOR,
DG_ADR_NO_EXEMPTION,
DG_ADR_PTS_UNI,
DG_ADR_PTS_UNICAP,
DG_ADR_PTS_VAL,
DG_ADR_PTS_VALCAP,
DISCREPANCY,
DISCR_NO_BLOCK,
EEW_TOR_ITM_TR,
EMPTY_RETURN_REQ,
ERP_COMP_CODE,
ERP_COMP_ORG_ID,
ERP_DLV_ID,
ERP_DLV_ITEM_ID,
ERP_PLANT_ID,
FAG_ITEM_KEY,
FAG_KEY,
FAG_SERVICE_KEY,
FLIGHT_CODE,
FLIGHT_NUMBER,
FREE_STORAGE_TIME,
FU_QTY_FIXED,
FU_ROOT_KEY,
GRO_VOL_UNI,
GRO_VOL_UNICAP,
GRO_VOL_VAL,
GRO_VOL_VALCAP,
GRO_WEI_UNI,
GRO_WEI_UNICAP,
GRO_WEI_VAL,
GRO_WEI_VALCAP,
GT_ATB,
GT_ATB_EDATE,
GT_ATB_TYPE,
GT_BOND_CARGO,
GT_CUSTDECL_ID,
GT_CUST_ACT_IB,
GT_IMPORT_LOC,
GT_MRN,
GT_MRN_EDATE,
GT_STATUS,
HANDLING_CARGO,
HANDLING_EXEC,
HBL_NUMBER,
HBL_NUMBER_STATUS,
HEIGHT,
HEIGHTCAM,
IMO_ID,
INCL_PIECE_COUNT,
INC_CLASS_CODE,
INC_LOC_ID,
INC_LOC_KEY,
INC_TRANSF_LOC_N,
ITEM_CAPA_DEF,
ITEM_CAT,
ITEM_DESCR,
ITEM_ID,
ITEM_PARENT_KEY,
ITEM_SORT_ID,
ITEM_TYPE,
LEADING_ITEM_KEY,
LENGTH,
LENGTHCAM,
LENGTH_VRES,
LOAD_SEQ,
LOCAL_CCODE,
LOCAL_ITEM,
LOCAL_NOG,
MAIN_CARGO_ITEM,
MANDT,
MEASUOM,
MEASUOMCAM,
MEASUOM_VRES,
MIXED_PALLET_IND,
MOT,
MOT_CAT,
MTR,
MULTI_ITEM,
MULTI_RESOURCE,
NET_WEI_UNI,
NET_WEI_UNICAP,
NET_WEI_VAL,
NET_WEI_VALCAP,
NON_STACKABLE,
OP_UUID001,
ORGANIZED_BY_ORDPARTY,
ORIENTATION,
ORIG_BTDITEM_ID,
ORIG_BTDITEM_TCO,
ORIG_BTD_ID,
ORIG_BTD_TCO,
ORIG_REF_BO,
ORIG_REF_ITEM,
ORIG_REF_ROOT,
OVERDIM_CARGO,
PACKAGE_ID,
PACKAGE_TCO,
PACKCODE,
PARENT_KEY,
PAYL_VOL_UNI_VRES,
PAYL_VOL_VAL_VRES,
PAYL_WEI_UNI_VRES,
PAYL_WEI_VAL_VRES,
PIC_EAR_ACCTRQ,
PIC_EAR_REQTRQ,
PIC_LAT_ACCTRQ,
PIC_LAT_REQTRQ,
PIV_WEI_UNI,
PIV_WEI_VAL,
PKGUN_WEI_UNI,
PKGUN_WEI_UNICAP,
PKGUN_WEI_VAL,
PKGUN_WEI_VALCAP,
PLATENUMBER,
POS_LEVEL,
POS_ROW,
POS_SPLIT_DECK,
POS_STACK,
POS_X,
POS_Y,
POS_Z,
PRD_DGPROFL,
PRD_FRGHT_GRP,
PRD_KEY,
PRD_TRANSP_GRP,
PRODUCT_ID,
PROVISION_REQ,
QTY_DISCREPANCY,
QUA_PCS2_UNI,
QUA_PCS2_UNICAP,
QUA_PCS2_VAL,
QUA_PCS2_VALCAP,
QUA_PCS_UNI,
QUA_PCS_UNICAP,
QUA_PCS_VAL,
QUA_PCS_VALCAP,
REF_BO,
REF_ITEM_KEY,
REF_ROOT_KEY,
REF_TRQ_ITEM_KEY,
REF_TRQ_ROOT_KEY,
RESOURCE_CONDITION,
RES_CLASS,
RES_OWNER_ORG,
RES_TIME_CHECK_REL,
SALES_QTY_UNI,
SALES_QTY_VAL,
SCHED_DEP,
SCHED_KEY,
SHIPPER_ID,
SHIPPER_KEY,
SHIPPER_OWN,
SLAC_VAL,
SPLIT_INDICATOR,
SPLIT_ORIG_REF_ITEM,
SP_ADDRESS_ID,
SRC_LOC_IATACODETRQ,
SRC_LOC_IDTRQ,
SRC_LOC_KEYTRQ,
SRC_LOC_UNLOCODETRQ,
SRC_STOP_KEY,
SRC_STOP_KEY_A,
STOP_SUCC_ASSGN,
TARE_WEI_UNI_VRES,
TARE_WEI_VAL_VRES,
TEMP_CTRL_MAX,
TEMP_CTRL_MIN,
TEMP_UOM,
TRACKING_NO,
TRACK_EXEC_REL,
TRANSSRVLVL_CODE,
TRANSSRVREQ_CODE,
TRQ_ID,
TRQ_ITEM_ID,
TURES_CAT,
TURES_ID,
TURES_TCO,
ULD_RATE_CLASS,
ULD_RATE_TYPE,
UNASSGN_END,
UNASSGN_START,
UNLOAD_POINTTRQ,
UPD_PROP_INDICATOR,
VEHICLERES_ID,
VEHSEQ,
VEH_KEY,
VENT_SETT_CODE,
VESSEL_ID,
VOYAGE_ID,
WIDTH,
WIDTHCAM,
WM_LOGSYS,
WM_WH_NUMBER ) SELECT * FROM :D_TORITE;

INSERT INTO "SAPX0M"."/SCMTMS/D_TORROT" (
ACS_AUTH_CHECK,
ACS_CHANGED_BY,
ACS_CHANGED_ON,
ACS_CHECK_ENABLE,
ACS_COPY_LOCDATA,
ALLOWED_ITM_ASSIGNM,
AOTYPE,
ARCHIVING,
ARCHIVING_TIME,
ARRIVAL_DATE,
AUTO_CONF,
AUTO_PLAN,
AUTO_TCC,
BALOG_EXTNO,
BASE_BTDITEM_ID,
BASE_BTDITEM_TCO,
BASE_BTD_ID,
BASE_BTD_TCO,
BASE_BTD_VERSION,
BASE_UOM_UNI,
BASE_UOM_UNICAP,
BASE_UOM_VAL,
BASE_UOM_VALCAP,
BLK_EXEC,
BLK_PLAN,
BLOCK_REASON,
BL_NODE_KEY,
BL_NUMBER,
BL_NUMBER_FIN,
BL_NUMBER_STATUS,
BOK_CONT_ITM_SRC,
BOK_MULTI_STOP,
BOOKING_EXEC,
BOOKING_TRMO,
BRC_EXEC,
BRC_PLAN,
BW_RELEVANCE,
CAPA_CHECK_ERROR,
CARR_CONF_NEC,
CASS_CODE,
CB_MEANS_IDENT,
CB_MOT,
CB_MTR,
CB_MTR_COUNTRY,
CHANGED_BY,
CHANGED_ON,
CMPLC_CHK_ENABLE,
CM_ID,
COLOAD_IND,
COMMPTYID,
COMMPTY_KEY,
COMPLIANCE,
CONFIRMATION,
CONSIGNEEID,
CONSIGNEE_KEY,
CONSOL_TYPE,
CONS_ALLOWED,
CONS_IND,
CONTRACT_BASIS,
CONT_CNT_UNI,
CONT_CNT_UNICAP,
CONT_CNT_VAL,
CONT_CNT_VALCAP,
CREATED_BY,
CREATED_ON,
CREATION_TYPE,
CROSS_DOC_CHECK_STATUS,
CS_EXECUTED,
CURR_WGHT_AXLE1,
CURR_WGHT_AXLE2,
CURR_WGHT_AXLE3,
CURR_WGHT_CONNECTOR,
CURR_WGHT_KING_PIN,
CURR_WGHT_SPLIT_DECK,
CUSTOMS,
DATETIME_BLK_EXE,
DATETIME_BLK_INV,
DATETIME_BLK_PLA,
DATETIME_CHCMPLC,
DATETIME_CHCUS,
DATETIME_CHEXC,
DATETIME_CHLC,
DATETIME_CHSCC,
DATETIME_CHSCS,
DB_KEY,
DELETE_IND,
DELIVERY,
DENSITY_FACTOR,
DFLT_PCS_UNI,
DFLT_TEXT_TYPE,
DFLT_VOL_UOM,
DFLT_WEI_UOM,
DGO_CHECK_ERROR,
DGO_INDICATOR,
DG_ADR_NO_EXEMPTION,
DG_ADR_PTS_UNI,
DG_ADR_PTS_UNICAP,
DG_ADR_PTS_VAL,
DG_ADR_PTS_VALCAP,
DISPLAY_UNCONF_ITMS,
DLV_BLOCKED,
DLV_CONF_RCVD_ON,
DLV_CREATED_ON,
DLV_PRIO,
DLV_SPLT_STATUS,
DOC_CHECK_STATUS,
EEW_TOR_ROOT,
EIKTO,
ENABLE_CHARGE_CALC,
ENABLE_COST_DISTRIBUTION,
ENABLE_INT_CHARGE_CALC,
ENABLE_INT_COST_DISTR,
ENABLE_INT_SETTLEMENT,
ENABLE_SETTLEMENT,
ERP_SHPM_BTDID,
ERP_SHPM_LOGSYS,
ERP_SHPM_TYPE,
ERP_SHP_REL,
EST_MA_DATE,
EVENT_SCHEDULED,
EXCL_FU_FROM_PLN,
EXCL_NSC_SEC,
EXCL_SCO_SEC,
EXCL_SPX_SEC,
EXECUTION,
EXEC_GRP_ID,
EXEC_ORG_ID,
FAG_ITEM_KEY,
FAG_KEY,
FINAL_EXEC_EVENT,
FIRST_SHP_TRANSM,
FIXATION,
FOLLOWUP_TRQ_EXP,
FREIGHT_TERM,
FUBR_KEY,
FU_FIX,
GEN_SECURITY_STATUS,
GOODS_AMNT_AGGR_MOD,
GRO_VOL_UNI,
GRO_VOL_UNICAP,
GRO_VOL_VAL,
GRO_VOL_VALCAP,
GRO_WEI_UNI,
GRO_WEI_UNICAP,
GRO_WEI_VAL,
GRO_WEI_VALCAP,
IATA_AGENT_CODE,
INC_CHECK_ERROR,
INS_ENABLE,
INVDISP_RESOLUTION,
INV_BLOCK,
INV_BLOCK_REASON,
LABELTXT,
LAST_SHPM_TRANSM,
LAST_UPD_BY_ERP,
LC_COMP_SET_MAN,
LIFECYCLE,
LOAD_PLAN_STATUS,
LOGSYS,
LOG_REFERENCE,
MANDT,
MANIFESTED,
MAX_AVA_CAPA_VOL,
MAX_AVA_CAPA_WEI,
MAX_GRO_VOL_UNI,
MAX_GRO_VOL_VAL,
MAX_GRO_WEI_UNI,
MAX_GRO_WEI_VAL,
MAX_UTIL,
MAX_UTIL_LENGTH,
MAX_UTIL_MASS,
MAX_UTIL_VOLUME,
MBL_ISSUING_DATE,
MOVEMENT_CAT,
MOVEMENT_TYPE,
MSG_DLV_COUNTER,
MTR,
MULTI_EXE_PTY,
MULTI_INV_PTY,
NET_WEI_UNI,
NET_WEI_UNICAP,
NET_WEI_VAL,
NET_WEI_VALCAP,
NOT_SEC_FU_ASSIGNED,
OIAC_PROFILE_KEY,
ORGANIZATION_INTERACTION,
OUTPUT_OPTIONS,
OUTPUT_OPT_CHG_DATETIME,
PARTNER_MBL_ID,
PARTNER_MBL_ID_STATUS,
PARTNER_MBL_RCVD,
PARTNER_REF_ID,
PARTNER_SCHEMA,
PKGUN_WEI_UNI,
PKGUN_WEI_UNICAP,
PKGUN_WEI_VAL,
PKGUN_WEI_VALCAP,
PLAN_PROF_ID,
PLAN_PROF_KEY,
PLAN_STATUS_ROOT,
PLN_SCT_REL,
PPF_PROFILE,
PPF_PROFILE_ADD,
PPF_PROFILE_AUTO,
PREDEC_BLK_EXEC,
PREDEC_BLK_PLAN,
PROC_RESULT_CODE,
PROP_EXEC_INFO,
PURCH_GRP_ID,
PURCH_ORG_ID,
PYMT_IND,
QUA_PCS2_UNI,
QUA_PCS2_UNICAP,
QUA_PCS2_VAL,
QUA_PCS2_VALCAP,
QUA_PCS_UNI,
QUA_PCS_UNICAP,
QUA_PCS_VAL,
QUA_PCS_VALCAP,
REF_EXPORTDOC_KEY,
REGULATED_AGENT_CODE,
RESP_PERSON,
SCI_CODE,
SECURITY_MANIFEST,
SECURITY_STATUS,
SEC_CHANGED_BY,
SEC_CHANGED_ON,
SEC_MAN_SET_BY_SRVC,
SEC_STATUS,
SELF_DELIVERY,
SENDER_PARTY_ID,
SERVICE_LVL_PD,
SERVICE_LVL_PL,
SHIPPERID,
SHIPPER_KEY,
SHIPPING_TYPE,
SHPCON_SET_BY,
SHPM_TRANSM,
SHPM_UPD_REL,
SHP_CONS_RULE,
SRC_LOC_CSS,
SRC_LOC_EXPIRY_DATE,
SRC_LOC_REGREFNO,
STAGE_DET_STRAT,
STAGE_PROFILE,
STOP_SEQ_TYPE,
SUBCONTRACTING,
TCC_EVENT_PROFILE,
TEND_EXECUTED,
TEXT_SCHEMA,
TOR_CAT,
TOR_ID,
TOR_TYPE,
TRACK_EXEC_REL,
TRAFFIC_DIRECT,
TRANSSRVLVL_CODE,
TRMODCAT,
TRMODCOD,
TRQ_CAT,
TRQ_UNIQUE,
TSP,
TSPEXECID,
TSPEXEC_AIRLC,
TSPEXEC_KEY,
TSPEXEC_SCAC,
TSPEXEC_SET_BY,
TSPID,
TSPISSAGNT_ID,
TSPISSAGNT_KEY,
TSP_AIRLC,
TSP_AIRLCAWB,
TSP_SCAC,
TSP_SET_BY_SRVC,
TU_CAT,
UNCONTROLLED,
UPDATE_FROM_PRED,
USER_ID_BLK_EXEC,
USER_ID_BLK_INV,
USER_ID_BLK_PLAN,
USER_ID_CHCUS,
USER_ID_CHEXC,
USER_ID_CHLC,
USER_ID_CHSCC,
USER_ID_CHSCS,
WGHT_LOADING_UOM ) SELECT * FROM :D_TORROT;

INSERT INTO "SAPX0M"."/SCMTMS/D_TORSTP" (
ACC_END,
ACC_START,
ADR_LOC_UUID,
ASSGN_END,
ASSGN_HRES,
ASSGN_HRES_CONS,
ASSGN_ITEM_KEY,
ASSGN_NET_DUR,
ASSGN_SEQ,
ASSGN_START,
ASSGN_STOP_KEY,
ASSG_CAT,
AUTO_PLAN,
CARR_CONF_END,
CARR_CONF_START,
CUTOFF_CARGO,
CUTOFF_CUST_DOC,
CUTOFF_DG_DOC,
CUTOFF_DOC,
CUTOFF_DOC_SET_BY_SRVC,
DATES_SETBY,
DB_KEY,
EEW_TOR_STOP,
ENTRY_PORT,
EXIT_PORT,
HANDLING_EXEC,
LOG_LOCIATA,
LOG_LOCID,
LOG_LOCUN,
LOG_LOC_UUID,
MANDT,
PARENT_KEY,
PLAN_TRANS_TIME,
REQ_END,
REQ_START,
ROUTE_REF_DATA_STATUS,
ROUTE_ROOT_KEY,
ROUTE_STOP_KEY,
SCHED_DEP_KEY,
SCHED_REF_DATA_STATUS,
SCHED_REF_INFO,
SCHED_STOP_KEY,
SEL_TIME,
STOP_CAT,
STOP_CURRENT,
STOP_FIX,
STOP_ID,
STOP_ORIGIN,
STOP_ROLE,
STOP_SEQ_POS,
TRQ_ACC_END,
TRQ_ACC_START,
TRQ_BASED_STOP,
TRQ_REQ_END,
TRQ_REQ_START ) SELECT * FROM :D_TORSTP;

INSERT INTO "SAPX0M"."/SCMTMS/D_TORSTS" (
AGREEMENT_PARTY,
AIRCRAFT_CODE,
BILL_TO_PARTY_ID,
BILL_TO_PARTY_KEY,
BLK_EXEC,
BLK_PLAN,
BRC_EXEC,
BRC_PLAN,
DATETIME_BLK_EXE,
DATETIME_BLK_PLA,
DB_KEY,
DG_ADR_NO_EXEMPTION,
DG_ADR_REL,
DISTANCE_KM,
DURATION_NET,
EEW_TOR_STOPSUCC,
EXEC_GRP_ID,
EXEC_ORG_ID,
EXTERNAL_FA_ID,
FAG_ID,
FAG_ITEM_KEY,
FAG_ITEM_NO,
FAG_KEY,
FLAG_COUNTRY,
FLIGHT_CODE,
FLIGHT_NUMBER,
GT_CUST_ACT_INB,
IMO_ID,
MANDT,
MAX_UTIL,
MOT,
MOT_CAT,
MOT_CAT_PROP,
MOT_PROP,
MTR_PROP,
MTR_TCO,
OI_REJ_REASON_CODE,
OI_REQ_BY,
ORDER_REL_TYPE,
ORG_INTERACTION,
OTHER_AG_PARTY_RC,
PARENT_KEY,
PLAN_STATUS,
PREDEC_BLK_EXEC,
PREDEC_BLK_PLAN,
RESP_PERSON,
ROOT_KEY,
SCHED_REF,
STAGE_CAT,
STAGE_TYPE,
STATISTICAL,
STG_PYMT_IND,
STOP_SUCC_CAT,
SUCCESSOR_ID,
SUCC_STOP_KEY,
TSP_AIRLC,
TSP_AIRLCAWB,
TSP_ID,
TSP_KEY,
TSP_PYMT_ID,
TSP_PYMT_KEY,
TSP_PYMT_SCAC,
TSP_SCAC,
USER_ID_BLK_EXEC,
USER_ID_BLK_PLAN,
UTIL_DIMLESS,
UTIL_LENGTH,
UTIL_MASS,
UTIL_VOLUME,
VESSEL_ID,
VOYAGE_ID ) SELECT * FROM :D_TORSTS;

INSERT INTO "SAPX0M"."/SCMTMS/D_TRQITM" (
AIR_EXCH_RATE,
AIR_EXCH_UOM,
AIR_HUMIDITY,
AMT_GDSVC_CUR,
AMT_GDSVC_VAL,
AMT_GDSV_CUR,
AMT_GDSV_VAL,
AMT_HVAL_CAR_IND,
AMT_INSV_CUR,
AMT_INSV_VAL,
BASE_BTDITEM_ID,
BASE_BTDITEM_TCO,
BASE_BTD_DLVPROC,
BASE_BTD_ID,
BASE_BTD_LOGSYS,
BASE_BTD_TCO,
BASE_BTD_VERSION,
BASE_UOM_UNI,
BASE_UOM_VAL,
BLK_EXEC,
BLK_PLAN,
BOM_INDICATOR,
BUYORIG_BTD_DATE,
BUYORIG_BTD_ID,
CNF_CONT_CNT_UNI,
CNF_CONT_CNT_VAL,
CNF_GRO_VOL_UNI,
CNF_GRO_VOL_VAL,
CNF_GRO_WEI_UNI,
CNF_GRO_WEI_VAL,
CNF_QTY_UNI,
CNF_QTY_VAL,
CNF_QUA_PCS2_UNI,
CNF_QUA_PCS2_VAL,
CNF_QUA_PCS_UNI,
CNF_QUA_PCS_VAL,
CNV_RATE_BAS_UNI,
CNV_RATE_BAS_VAL,
CONSIGNEE_ID,
CONSIGNEE_KEY,
CONS_CONT,
CONT_CNT_UNI,
CONT_CNT_VAL,
CONV_RATE_UNI,
CONV_RATE_VAL,
COUNTRY,
CP_ADDRESS_ID,
CUST_COMM_CLASS,
DB_KEY,
DEL_EAR_ACC,
DEL_EAR_CNF,
DEL_EAR_REQ,
DEL_LAT_ACC,
DEL_LAT_CNF,
DEL_LAT_REQ,
DEL_SEL_TIME,
DES_LOC_IATACODE,
DES_LOC_ID,
DES_LOC_KEY,
DES_LOC_UNLOCODE,
DES_STAGE_KEY,
DGO_CHECK_ERROR,
DGO_DOC_BASED,
DGO_INDICATOR,
DG_ADR_NO_EXEMPTION,
DG_ADR_PTS_UNI,
DG_ADR_PTS_VAL,
DLV_ADD_SPLITCRT,
DLV_BLOCKED,
DLV_BLOCK_REASON,
DLV_COMPLETED,
DLV_RELEVANCE,
DLV_RETURN,
DT_ITEM_GRP_ID,
DT_ORD_COMB_IND,
DT_PRIORITY_C,
EEW_TRQ_ITEM,
EMPTY_RETURN_REQ,
ERP_COMP_CODE,
ERP_COMP_ORG_ID,
ERP_PLANT_ID,
EXPORT_BT_TYPE,
FAG_ITEM_KEY,
FAG_KEY,
FAG_SERVICE_KEY,
GM_RELEVANCE,
GOODS_ISSUE_DATE,
GRO_VOL_UNI,
GRO_VOL_VAL,
GRO_WEI_UNI,
GRO_WEI_VAL,
GT_ATB,
GT_ATB_EDATE,
GT_ATB_TYPE,
GT_BOND_CARGO,
GT_CUST_ACT_IB,
GT_IMPORT_LOC,
HEIGHT,
INB_CUSPR_AREA,
INB_CUSPR_STOCK,
INC_CLASS_CODE,
INC_LOC_EAR_ACC,
INC_LOC_EAR_REQ,
INC_LOC_ID,
INC_LOC_KEY,
INC_LOC_LAT_ACC,
INC_LOC_LAT_REQ,
INC_TRANSF_LOC_N,
ITEM_CAT,
ITEM_COMPLETED,
ITEM_DESCR,
ITEM_HIER_TCO,
ITEM_ID,
ITEM_PARENT_KEY,
ITEM_TYPE,
LEADING_ITEM_KEY,
LENGTH,
MAIN_CARGO_ITEM,
MANDT,
MAT_AVAIL_DATE,
MEASUOM,
MOT,
MOT_CAT,
NET_WEI_UNI,
NET_WEI_VAL,
NON_STACKABLE,
OPEN_QTY_UNI,
OPEN_QTY_VAL,
ORD_ITM_CANCELED,
ORD_ITM_REJECTED,
ORD_REJ_REASON,
ORGANIZED_BY_ORDPARTY,
ORIGCOUNTRY_CODE,
ORIGREGION_CODE,
ORIG_BTDITEM_ID,
ORIG_BTDITEM_TCO,
ORIG_BTD_DLVPROC,
ORIG_BTD_ID,
ORIG_BTD_TCO,
ORIG_DLV_DATE,
ORIG_INCLOC_DATE,
ORIG_PU_DATE,
OUTB_CUSPR_AREA,
OUTB_CUSPR_STOCK,
OVERDIM_CARGO,
PACKAGE_ID,
PACKAGE_TCO,
PACKCODE,
PARENT_KEY,
PAR_DLV_MIN_UNI,
PAR_DLV_MIN_VAL,
PAR_DLV_RDF_UNI,
PAR_DLV_RDF_VAL,
PD_CTRL_CODE,
PD_MAX_NUMBER,
PIC_EAR_ACC,
PIC_EAR_CNF,
PIC_EAR_REQ,
PIC_LAT_ACC,
PIC_LAT_CNF,
PIC_LAT_REQ,
PIC_PAC_ACTDUR,
PIC_SEL_TIME,
PKGUN_WEI_UNI,
PKGUN_WEI_VAL,
PLATENUMBER,
PRD_DGPROFL,
PRD_FRGHT_GRP,
PRD_KEY,
PRD_TRANSP_GRP,
PRODUCT_ID,
PROVISION_REQ,
QTY_DTM_FIXED,
QT_OVER_PERCENT,
QT_OVER_PERC_IND,
QT_UNDER_PERCENT,
QUA_COMP_BSD_UNI,
QUA_COMP_BSD_VAL,
QUA_DLV_UNI,
QUA_DLV_VAL,
QUA_PCS2_UNI,
QUA_PCS2_VAL,
QUA_PCS_UNI,
QUA_PCS_VAL,
REQ_QTY_UNI,
REQ_QTY_VAL,
RES_CLASS,
SHIPPER_ID,
SHIPPER_KEY,
SHIPPER_OWN,
SLAC_VAL,
SP_ADDRESS_ID,
SRC_LOC_CSS,
SRC_LOC_IATACODE,
SRC_LOC_ID,
SRC_LOC_KEY,
SRC_LOC_REGREFNO,
SRC_LOC_UNLOCODE,
SRC_STAGE_KEY,
TEMP_CTRL_MAX,
TEMP_CTRL_MIN,
TEMP_UOM,
TIMESTREAM_ID,
TRANP_PL_DATE,
TRANSP_RELEVANCE,
TRANSSRVLVL_CODE,
TRANSSRVREQ_CODE,
TRQ_OTR_ITEM_KEY,
TURES_CAT,
TURES_ID,
TURES_TCO,
UNLOAD_POINT,
VEHICLERES_ID,
VEH_KEY,
VENT_SETT_CODE,
WIDTH ) SELECT * FROM :D_TRQITM;

INSERT INTO "SAPX0M"."/SCMTMS/D_TRQROT" (
ACS_CHECK_ENABLE,
ACS_COPY_LOCDATA,
ADD_FAG_ITEM_KEY,
ADD_FAG_KEY,
ADD_SERVICE_PRODUCT_ID,
AGGR_ORG_INTERACTION,
AGREEMENT_PARTY,
AIR_SECURITY,
AMT_GDSVC_CUR,
AMT_GDSVC_VAL,
AMT_GDSV_CUR,
AMT_GDSV_VAL,
AMT_HVAL_CAR_IND,
AMT_INSV_CUR,
AMT_INSV_VAL,
APPROVAL,
APPROVAL_ACTIVE,
ARCHIVING,
ARCHIVING_TIME,
BASE_BTD_DATE,
BASE_BTD_ID,
BASE_BTD_PROCTCO,
BASE_BTD_TCO,
BASE_BTD_VERSION,
BASE_UOM_UNI,
BASE_UOM_VAL,
BLKG_EDI,
BLK_CFIR,
BLK_CONF,
BLK_EXEC,
BLK_PLAN,
BLK_QUOT,
BRC_CFIR,
BRC_CONF,
BRC_EXEC,
BRC_PLAN,
BRC_QUOT,
BUYORIG_BTD_DATE,
BUYORIG_BTD_ID,
CHANGED_BY,
CHANGED_ON,
CMPLC_CHK_ENABLE,
CNCL_RSN_CODE,
CNF_CONT_CNT_UNI,
CNF_CONT_CNT_VAL,
CNF_GRO_VOL_UNI,
CNF_GRO_VOL_VAL,
CNF_GRO_WEI_UNI,
CNF_GRO_WEI_VAL,
CNF_QUA_PCS2_UNI,
CNF_QUA_PCS2_VAL,
CNF_QUA_PCS_UNI,
CNF_QUA_PCS_VAL,
COMPLETENESS,
COMPLIANCE,
CONFIRMATION,
CONSIGNEE_ID,
CONSIGNEE_KEY,
CONSOL_TYPE,
CONSUMPTION,
CONT_CNT_UNI,
CONT_CNT_VAL,
CP_ADDRESS_ID,
CREATED_BY,
CREATED_ON,
CREDITLIMIT,
CRTRADE_FWO_KEY,
CUSTOMS_HANDLG,
DATETIME_CHCMPLC,
DATETIME_CHCNF,
DATETIME_CHLC,
DB_KEY,
DEF_ROUTE_KEY,
DELIVERY,
DEL_EAR_ACC,
DEL_EAR_CNF,
DEL_EAR_REQ,
DEL_LAT_ACC,
DEL_LAT_CNF,
DEL_LAT_REQ,
DEL_SEL_TIME,
DES_LOC_IATACODE,
DES_LOC_ID,
DES_LOC_KEY,
DES_LOC_UNLOCODE,
DES_STAGE_KEY,
DGO_CHECK_ERROR,
DGO_DOC_BASED,
DGO_INDICATOR,
DG_ADR_NO_EXEMPTION,
DG_ADR_PTS_UNI,
DG_ADR_PTS_VAL,
DIRECT_EWM_ACTIVE,
DLV_BILLING,
DLV_BLOCKED,
DLV_BLOCK_REASON,
DLV_CR_BY_TM,
DLV_DISTRIBUTION,
DLV_FU_BTD_TCO,
DLV_GOODS_MVMNT,
DLV_PACKING,
DLV_PICKING,
DLV_PLANNING,
DLV_SPLTUPD_STATUS,
DLV_SPLTUPD_TIME,
DT_ORD_COMB_IND,
DT_PRIORITY_C,
EDI_INDICATOR,
EEW_TRQ_ROOT,
EM_ACTIVE,
EXECUTION,
FAG_ITEM_KEY,
FAG_KEY,
FOLLOWUP_TRQ_EXP,
GRO_VOL_UNI,
GRO_VOL_VAL,
GRO_WEI_UNI,
GRO_WEI_VAL,
GT_EXP_DECL_LSP,
GT_IMP_DECL_LSP,
INC_CLASS_CODE,
INC_LOC_EAR_ACC,
INC_LOC_EAR_REQ,
INC_LOC_ID,
INC_LOC_KEY,
INC_LOC_LAT_ACC,
INC_LOC_LAT_REQ,
INC_LOC_STAGE_RULE,
INC_TRANSF_LOC_N,
INS_BY_LSP_IND,
INS_ENABLE,
INVC_INT_ENABLE,
INVOICING_ENABLE,
LIFECYCLE,
LOGISTICAL_RELEVANCE,
LOGSYS,
MANDT,
MOT,
MOT_CAT,
MOVEM_TYPE,
MULTI_INV_PTY,
NET_WEI_UNI,
NET_WEI_VAL,
ONE_ITEM_ALLOWED,
OP_ADDRESS_ID,
OP_AMT_CLC_CUR,
OP_AMT_CLC_VAL,
OP_PAYMENT_RECVD,
OP_PAYTERM,
OP_PREPAY_REQD,
ORDER_DATE,
ORDER_PARTY_ID,
ORDER_PARTY_KEY,
PARTNER_SCHEMA,
PAYMENT_STATUS,
PD_CTRL_CODE,
PIC_EAR_ACC,
PIC_EAR_CNF,
PIC_EAR_REQ,
PIC_LAT_ACC,
PIC_LAT_CNF,
PIC_LAT_REQ,
PIC_SEL_TIME,
PKGUN_WEI_UNI,
PKGUN_WEI_VAL,
PLANNING,
PLAN_DATA_INCOMP,
PLN_REQ_CNF_QTY,
QUA_PCS2_UNI,
QUA_PCS2_VAL,
QUA_PCS_UNI,
QUA_PCS_VAL,
QUOT_ASSIGNMENT,
QUOT_CREATE_TRQ,
QUOT_MODE,
QUOT_PRLIMIT_CUR,
QUOT_PRLIMIT_VAL,
QUOT_TRQ_KEY,
QUOT_VALID_FROM,
QUOT_VALID_TO,
REGULATED_AGENT,
RFQ_REJ_R_CODE,
RFQ_RESPDUEDTIME,
RFQ_RESP_CODE,
SALES_GROUP_ID,
SALES_OFF_ID,
SALES_ORG_ID,
SCI_CODE,
SENDER_PARTY_ID,
SERVICE_PRODUCT_ID,
SHIPMENT_LIKE,
SHIPPER_ID,
SHIPPER_KEY,
SHIPPING_TYPE,
SHPPLN_BLOCKED,
SHPPLN_BLOCK_REASON,
SP_ADDRESS_ID,
SRC_LOC_CSS,
SRC_LOC_EXPIRY_DATE,
SRC_LOC_IATACODE,
SRC_LOC_ID,
SRC_LOC_KEY,
SRC_LOC_REGREFNO,
SRC_LOC_UNLOCODE,
SRC_STAGE_KEY,
STAGE_DET_STRAT,
STAGE_PROFILE,
TCC_ENABLE,
TCC_EVENT_PROFILE,
TCC_INT_ENABLE,
TRACKING_NO,
TRAFFIC_DIRECT,
TRANSSRVLVL_CODE,
TRQ_CAT,
TRQ_CNF_CR_TYPE,
TRQ_CNF_SUB_IND,
TRQ_ID,
TRQ_TEMPLATE_IND,
TRQ_TYPE,
TSP_ADDRESS_ID,
TSP_AIRLC,
TSP_AIRLCAWB,
TSP_ID,
TSP_KEY,
TSP_SCAC,
UNCONTROLLED,
UNLOAD_POINT,
WF_COUNT,
WM_LOGSYS,
WM_WH_NUMBER ) SELECT * FROM :D_TRQROT;

INSERT INTO "SAPX0M"."/SCMTMS/D_TRQSTG" (
AGREEMENT_PARTY,
DB_KEY,
DEL_EAR_ACC,
DEL_EAR_REQ,
DEL_LAT_ACC,
DEL_LAT_REQ,
DES_LOC_IATACODE,
DES_LOC_ID,
DES_LOC_KEY,
DES_LOC_UNLOCODE,
EEW_TRQ_STAGE,
EXTERNAL_FA_ID,
EXTERNAL_FA_ITEM_ID,
EXTERNAL_FA_VERSION,
MANDT,
MOT,
MOT_CAT,
MTR_TCO,
PARENT_KEY,
PIC_EAR_ACC,
PIC_EAR_REQ,
PIC_LAT_ACC,
PIC_LAT_REQ,
PRED_STAGE_KEY,
SRC_LOC_IATACODE,
SRC_LOC_ID,
SRC_LOC_KEY,
SRC_LOC_UNLOCODE,
STAGE_ID,
STAGE_TYPE,
SUCC_STAGE_KEY,
TSP_AIRLC,
TSP_AIRLCAWB,
TSP_ID,
TSP_KEY,
TSP_PYMT_ID,
TSP_PYMT_KEY,
TSP_PYMT_SCAC,
TSP_SCAC,
UNLOAD_POINT ) SELECT * FROM :D_TRQSTG;

INSERT INTO "SAPX0M"."/SCMTMS/RES_POS" (
CLIENT,
LAST_REPORTED,
LATITUDE,
LOCATION_UUID,
LONGITUDE,
RESOURCE_ID,
RESOURCE_NAME,
TIMESTAMP,
TRANS_ACTIVITY ) SELECT * FROM :RES_POS;

INSERT INTO "SAPX0M"."/TRP/RES_SHTRK" (
CARGO_LOADING_STATUS,
CHANGED_ON,
GTI_ON,
LOCATION_UUID,
MANDT,
MOVEMENT_STATUS,
RESOURCE_ID ) SELECT * FROM :RES_SHTRK;

INSERT INTO "SAPX0M"."/TRP/RES_TRKLOG" (
DB_KEY,
LOCATION_UUID,
LOG_FIELD,
LOG_TABLE,
MANDT,
RESOURCE_ID,
TRK_CAT,
TRK_LOG_TIME,
VALUE_NEW,
VALUE_OLD ) SELECT * FROM :RES_TRKLOG;




END;